{"posts":[{"title":"ACE Editor修改自动换号缩进","text":"https://stackoverflow.com/questions/38323427/remove-word-wrap-offset-in-ace-editor This is controlled by indentedSoftWrap setting in ace, you can turn it off by running 1editor.setOption(&quot;indentedSoftWrap&quot;, false); behaviours setting is completely unrelated and controls automatic insertion of closing brackets and tags. So your code from the above would become 123456789var editor = ace.edit(&quot;edittext&quot;);editor.setOptions({ maxLines: Infinity, // this is going to be very slow on large documents useWrapMode: true, // wrap text to view indentedSoftWrap: false, behavioursEnabled: false, // disable autopairing of brackets and tags showLineNumbers: false, // hide the gutter theme: &quot;ace/theme/xcode&quot;});","link":"/2023/08/06/ACE-Editor/"},{"title":"Vmware ESXi 6.7常用设置备忘录","text":"1. ESXi关闭超线程以提高安全性在主机-配置-系统-高级系统设置-编辑；搜索参数：VMkernel.Boot.hyperthreadingMitigation，有两项配置，参数配置为true ，即为关闭超线程。 2. 虚拟机使用主机物理硬盘如果是nvme固态硬盘可以在硬件列表中开启直通，然后在虚拟机设置中添加对应的pci设备。 如果是sata硬盘，则需要ssh登录，使用vmkfstools命令创建物理硬盘的映像： 1vmkfstools -z /vmfs/devices/disks/&lt;硬盘标识符&gt; /vmfs/volumes/datastore1/&lt;目标RDM磁盘名&gt;.vmdk 硬盘标识符为存储、设备选项卡里面磁盘列表，点击对应磁盘，查看到的硬盘路径，类似：/vmfs/devices/disks/t10.ATA_____WDC__WUH721414ALE6L4____________________QBHB0G1T____________。 3. 序列号企业版参考序列号 123456789101112131415HV4WC-01087-1ZJ48-031XP-9A843 NF0F3-402E3-MZR80-083QP-3CKM2 4F6FX-2W197-8ZKZ9-Y31ZM-1C3LZ JZ2E9-6D2DK-XZQD0-632E4-33E7Z MZ48M-DNK56-ZZJD0-RTCE2-9321X 0Y0AJ-4P29H-LZV81-59AQ2-C291V 0A4GL-D7JD7-LZR10-M30G0-A36JF 4C02A-DP2E2-AZ041-FH9X6-922J6 4. 查看硬盘健康状况使用系统自带命令esxcli 列出硬盘 1esxcli storage core device list 查看硬盘smart信息 1esxcli storage core device smart get -d &lt;disk&gt;","link":"/2023/08/06/exsi-help/"},{"title":"HL-2260D打印机粉盒重置","text":"HL-2260D打印机粉盒重置 长按电源键关机； 打开前鼓架盖； 按住Go键不放，再按电源键，待上面3灯同时亮起，同时放开Go键和电源键； 按10次Go键，关上鼓架盖，待机器重置；","link":"/2024/06/03/exsi-help_%E5%89%AF%E6%9C%AC/"},{"title":"ffmpeg的常用选项","text":"map选项默认情况下只在输入文件中的每种流里选择第一个流。 需要指定放入输出文件的流就需要使用-map选项。 用法举例： -map 0 From input index #0 (the 1st input) select all streams. -map 1:a From input index #1 (the 2nd input) select all audio streams. -map 3:s:4 From input index #3 (the 4th input) select subtitle stream index #4 (the fifth subtitle stream)。 -map 0 -map -0:s Will select all streams from input index #0 (the 1st input) except subtitles. 改变视频帧率有两种方法可以改变输出文件的视频流帧率： 使用 -r 选项 使用 fps滤镜。 12ffmpeg -i [inputfile] -r 30 [output]ffmpeg -i [inputfiel] -filter:v fps=30 [output] 有两种方法可以改变输出文件的视频流帧率： 改变默认音轨使用ffmpeg修改默认的音频轨道，先取消第二音轨的默认值，在设置为第一音轨。 1ffmpeg -i input.mkv -map 0:0 -map 0:1 -map 0:2 -c copy -disposition:a:1 0 -disposition:a:0 default -y output.mp4 改变音频采样率-ar 48k 44.1k 96k 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k output.flac 改变音频通道数量-ac 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -ac:0 2 -filter:0 aformat=channel_layouts=stereo output.flac 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -ac:0 6 -filter:0 aformat=channel_layouts=5.1 output.flac 改变音频位深 bit depth-sample_fmt 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -sample_fmt s24 -ac:0 6 -filter:0 aformat=channel_layouts=5.1 output.flac 生成空白音频可以使用anullsrc来生成静音音频： 1ffmpeg -f lavfi -i anullsrc=r=48000:cl=stereo -t 0.875 /Users/redtux/Movies/converted/silent-audio.aac sample_rate, r指定采样率，默认44100。 channel_layout, cl指定通道布局，详见 libavutil/channel_layout.c 中 channel_layout_map 定义，常见mono stereo 5.1。 -t文件时长，单位事秒，不指定就一直生成。 截取视频片段1ffmpeg -i 源文件名 -vcodec copy -acodec copy -ss 00:00:10 -to 00:00:15 目标文件名 -y 裁剪视频文件的多个部分，并将其合并成一个新的视频 调整播放速度调整视频文件中视频速度：123456789101112131415//2倍速播放ffmpeg -i test.mp4 -an -filter:v &quot;setpts=0.5*PTS&quot; out_test.mp4-i test.mp4是输入文件名 -an 将音频禁掉 （可以不加） -filter:v 对视频进行处理 &quot;setpts=0.5PTS&quot; 设置时间戳参数PTS为原先的一半，可接受调整范围为[0.25,4] out_test.mp4 输出视频文件 还可以在命令中加上指定fps（-r 60），使得不会丢帧 调整视频文件中音频速度：1234567891011121314ffmpeg -i test.mp4 -filter:a &quot;atempo=2.0&quot; -vn out_test.mp4-i 后满test.mp4是输入文件名 -filter:a 对音频进行处理 &quot;atempo=2.0&quot; 设置播放速度是原来的2倍 ， 倍率调整范围[0.5, 2.0] -vn 将视频禁掉 （可以不加） out_test.mp4 输出视频文件 需要调整到4倍可以采取以下方法： ffmpeg -i test.mp4 -filter:a &quot;atempo=2.0,atempo=2.0&quot; -vn out_test.mp4 同时调整视频文件的视频、音频：1ffmpeg -i test.mp4 -filter_complex &quot;[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]&quot; -map &quot;[v]&quot; -map &quot;[a]&quot; out_test.mp4 如果不想丢帧就同时设置 -r ，把帧率设置为原帧率的2倍。 metadata的使用1ffmpeg -i /Users/redtux/Movies/Becoming.Jane.2007.1080p.BluRay.x265.2Audio.mp4 -metadata title=&quot;Becoming.Jane.2007.1080p.BluRay.x265.2Audio-RARBG&quot; -map 0:0 -c:0 copy -metadata:s:0 title='Becoming.Jane.2007.1080p.BluRay.x265-RARBG' -metadata:s:0 handler='Becoming.Jane.2007.1080p.BluRay.x265-RARBG' -map 0:1 -c:1 copy -metadata:s:1 title=&quot;国语配音&quot; -metadata:s:1 handler=&quot;国语配音&quot; -metadata:s:1 language=&quot;chi&quot; -disposition:1 default -map 0:2 -c:2 copy -metadata:s:2 title=&quot;English&quot; -metadata:s:2 handler=&quot;English&quot; -metadata:s:2 language=&quot;eng&quot; -disposition:2 0 /Users/redtux/Movies/Becoming.Jane.2007.1080p.BluRay.x265.2Audio-RARBG.mp4","link":"/2023/08/06/ffmpeg-help2/"},{"title":"ffmpeg的常用选项","text":"基础指令一.查看FFmpeg支持的编码器 1ffmpeg configure -encoders 二.查看FFmpeg支持的解码器 1ffmpeg configure -decoders 三.查看FFmpeg支持的通信协议 1ffmpeg configure -protocols 四.查看FFmpeg所支持的音视频编码格式、文件封装格式与流媒体传输协议 1ffmpeg configure --help map选项默认情况下只在输入文件中的每种流里选择第一个流。 需要指定放入输出文件的流就需要使用-map选项。 用法举例： -map 0 From input index #0 (the 1st input) select all streams. -map 1:a From input index #1 (the 2nd input) select all audio streams. -map 3:s:4 From input index #3 (the 4th input) select subtitle stream index #4 (the fifth subtitle stream)。 -map 0 -map -0:s Will select all streams from input index #0 (the 1st input) except subtitles. 改变视频帧率有两种方法可以改变输出文件的视频流帧率： 使用 -r 选项 使用 fps滤镜。 12ffmpeg -i [inputfile] -r 30 [output]ffmpeg -i [inputfiel] -filter:v fps=30 [output] 有两种方法可以改变输出文件的视频流帧率： 改变默认音轨使用ffmpeg修改默认的音频轨道，先取消第二音轨的默认值，在设置为第一音轨。 1ffmpeg -i input.mkv -map 0:0 -map 0:1 -map 0:2 -c copy -disposition:a:1 0 -disposition:a:0 default -y output.mp4 改变音频采样率-ar 48k 44.1k 96k 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k output.flac 改变音频通道数量-ac 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -ac:0 2 -filter:0 aformat=channel_layouts=stereo output.flac 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -ac:0 6 -filter:0 aformat=channel_layouts=5.1 output.flac 改变音频位深 bit depth-sample_fmt 1ffmpeg -i input.dsf -map 0:0 -c:0 flac -ar:0 96k -sample_fmt s24 -ac:0 6 -filter:0 aformat=channel_layouts=5.1 output.flac 生成空白音频可以使用anullsrc来生成静音音频： 1ffmpeg -f lavfi -i anullsrc=r=48000:cl=stereo -t 0.875 /Users/redtux/Movies/converted/silent-audio.aac sample_rate, r指定采样率，默认44100。 channel_layout, cl指定通道布局，详见 libavutil/channel_layout.c 中 channel_layout_map 定义，常见mono stereo 5.1。 -t文件时长，单位事秒，不指定就一直生成。 截取视频片段1ffmpeg -i 源文件名 -vcodec copy -acodec copy -ss 00:00:10 -to 00:00:15 目标文件名 -y 视频拼接一.将4个视频拼接成一个很长的视频（无声音） 1ffmpeg -i 0.mp4 -i 1.mp4 -i 2.mp4 -i 3.mp4 -filter_complex '[0:0][1:0] [2:0][3:0] concat=n=4:v=1 [v]' -map '[v]' output.mp4 二.将4个视频拼接成一个很长的视频（有声音） 1ffmpeg -i 1.mp4 -i 2.mp4 -i 3.mp4 -filter_complex '[0:0][0:1] [1:0][1:1] [2:0][2:1] concat=n=3:v=1:a=1 [v][a]' -map '[v]' -map '[a]’ output.mp4 参数解释： 12345678[0:0][0:1] [1:0][1:1] [2:0][2:1] 分别表示第1个输入文件的视频、音频，第2个输入文件的视频、音频，第3个输入文件的视频、音频。concat=n=3:v=1:a=1 表示有3个输入文件，输出一条视频流和一条音频流。[v][a] 得到的视频流和音频流的名字，注意在 bash 等 shell 中需要用引号，防止通配符扩展。 四.竖向拼接2个视频 1ffmpeg -i 0.mp4 -i 1.mp4 -filter_complex &quot;[0:v]pad=iw:ih*2[a];[a][1:v]overlay=0:h&quot; out_2.mp4 五.横向拼接3个视频 1ffmpeg -i 0.mp4 -i 1.mp4 -i 2.mp4 -filter_complex &quot;[0:v]pad=iw*3:ih*1[a];[a][1:v]overlay=w[b];[b][2:v]overlay=2.0*w&quot; out_v3.mp4 六.竖向拼接3个视频 1ffmpeg -i 0.mp4 -i 1.mp4 -i 2.mp4 -filter_complex &quot;[0:v]pad=iw:ih*3[a];[a][1:v]overlay=0:h[b];[b][2:v]overlay=0:2.0*h&quot; out_v4.mp4 七.4个视频2x2方式排列 1ffmpeg -i 0.mp4 -i 1.mp4 -i 2.mp4 -i 3.mp4 -filter_complex &quot;[0:v]pad=iw*2:ih*2[a];[a][1:v]overlay=w[b];[b][2:v]overlay=0:h[c];[c][3:v]overlay=w:h&quot; out.mp4 视频帧操作一.查看每帧的信息 1ffprobe -v error -show_frames gemfield.mp4 从pict_type=I可以看出这是个关键帧，然后key_frame=1 表示这是IDR frame，如果key_frame=0表示这是Non-IDR frame。 二.截取视频中的某一帧把gemfield.mp4视频的第1分05秒的一帧图像截取出来。 1234# input seekingffmpeg -ss 00:1:05 -i gemfield.mp4 -frames:v 1 out.jpg# output seekingffmpeg -i gemfield.mp4 -ss 00:1:05 -frames:v 1 out1.jpg 参数解释： -frame:v 1，在video stream上截取1帧。input seeking使用的是key frames，所以速度很快；而output seeking是逐帧decode，直到1分05秒，所以速度很慢。 重要说明： ffmpeg截取视频帧有2种 seeking 方式，对应有2种 coding 模式：transcoding 和 stream copying（ffmpeg -c copy）。 transcoding 模式：需要 decoding + encoding 的模式，即先 decoding 再encoding。 stream copying 模式：不需要decoding + encoding的模式，由命令行选项-codec加上参数copy来指定（-c:v copy ）。在这种模式下，ffmpeg在video stream上就会忽略 decoding 和 encoding步骤。 三.查看视频总帧数 1ffprobe -v error -count_frames -select_streams v:0 -show_entries stream=nb_frames -of default=nokey=1:noprint_wrappers=1 gemfield.mp4 四.查看 key frame 帧数 1ffprobe -v error -count_frames -select_streams v:0 -show_entries stream=nb_read_frames -of default=nokey=1:noprint_wrappers=1 -skip_frame nokey gemfield.mp4 五.查看 key frame 所在的时间 1ffprobe -v error -skip_frame nokey -select_streams v:0 -show_entries frame=pkt_pts_time -of csv=print_section=0 gemfield.mp4 六.查看 key frame 分布的情况 1ffprobe -v error -show_frames gemfield.mp4 | grep pict_type 七.查看 key frame 所在的帧数 1ffprobe -v error -select_streams v -show_frames -show_entries frame=pict_type -of csv gemfield.mp4 | grep -n I | cut -d ':' -f 1 八.重新设置 key frame interval 1ffmpeg -i gemfield.mp4 -vcodec libx264 -x264-params keyint=1:scenecut=0 -acodec copy out.mp4 九.查看视频波特率 1ffprobe -v error -select_streams v:0 -show_entries stream=bit_rate -of default=noprint_wrappers=1:nokey=1 gemfield.mp4 调整播放速度调整视频文件中视频速度：123456789101112131415//2倍速播放ffmpeg -i test.mp4 -an -filter:v &quot;setpts=0.5*PTS&quot; out_test.mp4-i test.mp4是输入文件名 -an 将音频禁掉 （可以不加） -filter:v 对视频进行处理 &quot;setpts=0.5PTS&quot; 设置时间戳参数PTS为原先的一半，可接受调整范围为[0.25,4] out_test.mp4 输出视频文件 还可以在命令中加上指定fps（-r 60），使得不会丢帧 调整视频文件中音频速度：1234567891011121314ffmpeg -i test.mp4 -filter:a &quot;atempo=2.0&quot; -vn out_test.mp4-i 后满test.mp4是输入文件名 -filter:a 对音频进行处理 &quot;atempo=2.0&quot; 设置播放速度是原来的2倍 ， 倍率调整范围[0.5, 2.0] -vn 将视频禁掉 （可以不加） out_test.mp4 输出视频文件 需要调整到4倍可以采取以下方法： ffmpeg -i test.mp4 -filter:a &quot;atempo=2.0,atempo=2.0&quot; -vn out_test.mp4 同时调整视频文件的视频、音频：1ffmpeg -i test.mp4 -filter_complex &quot;[0:v]setpts=0.5*PTS[v];[0:a]atempo=2.0[a]&quot; -map &quot;[v]&quot; -map &quot;[a]&quot; out_test.mp4 如果不想丢帧就同时设置 -r ，把帧率设置为原帧率的2倍。 metadata的使用1ffmpeg -i /Users/redtux/Movies/Becoming.Jane.2007.1080p.BluRay.x265.2Audio.mp4 -metadata title=&quot;Becoming.Jane.2007.1080p.BluRay.x265.2Audio-RARBG&quot; -map 0:0 -c:0 copy -metadata:s:0 title='Becoming.Jane.2007.1080p.BluRay.x265-RARBG' -metadata:s:0 handler='Becoming.Jane.2007.1080p.BluRay.x265-RARBG' -map 0:1 -c:1 copy -metadata:s:1 title=&quot;国语配音&quot; -metadata:s:1 handler=&quot;国语配音&quot; -metadata:s:1 language=&quot;chi&quot; -disposition:1 default -map 0:2 -c:2 copy -metadata:s:2 title=&quot;English&quot; -metadata:s:2 handler=&quot;English&quot; -metadata:s:2 language=&quot;eng&quot; -disposition:2 0 /Users/redtux/Movies/Becoming.Jane.2007.1080p.BluRay.x265.2Audio-RARBG.mp4 提取mp4文件中的封面1ffmpeg -i input.mp4 -map 0:v -map -0:V -c copy ./cover.jpg 设置mp4文件的封面1ffmpeg -i video.mp4 -i image.png -map 1 -map 0 -c copy -disposition:0 attached_pic out.mp4 综合实例12345678910111213ffmpeg -y -i input.mp4 \\-i ~/cover.jpg \\-metadata title=&quot;[繁花].Blossoms.Shanghai.2023.S01E27.1080p.WEBRip.x265-haoduo&quot; \\-metadata comment=&quot;[繁花].Blossoms.Shanghai.2023.S01E27.1080p.WEBRip.x265-haoduo&quot; \\-filter_complex &quot;[0:0]select='between(t,131.32,1106.48)+between(t,1132.92,2647.88)',setpts=N/FRAME_RATE/TB,scale=1920:-8:flags=lanczos,setsar=1:1,hqdn3d=luma_spatial=2:chroma_spatial=1.5:luma_tmp=3:chroma_tmp=2.25[v]&quot; \\-map &quot;[v]&quot; -metadata:s:0 title=&quot;Blossoms.Shanghai.2023.S01E27.1080p.WEBRip.x265-haoduo&quot; -c:0 libx265 -pix_fmt yuv420p \\-x265-params &quot;aq-mode=3:repeat-headers=0:strong-intra-smoothing=1:bframes=4:b-adapt=2:frame-threads=0:colorprim=bt709:transfer=bt709:colormatrix=bt709:chromaloc=0&quot; \\-crf:0 30 -preset:0 slow -tag:0 hvc1 -g 250 \\-map 0:1 -metadata:s:1 title=&quot;Mandarin&quot; -metadata:s:1 handler=&quot;Mandarin&quot; -metadata:s:1 language=chi \\-c:1 libfdk_aac -profile:1 aac_he -b:1 64k -af:1 &quot;aselect='between(t,131.32,1106.48)+between(t,1132.92,2647.88)',asetpts=N/SR/TB&quot; \\-map 1 -c:2 copy -disposition:2 attached_pic \\-movflags +faststart -map_metadata -1 -map_chapters 0 \\&quot;/Users/redtux/Movies/Blossoms.Shanghai.2023.S01E27.1080p.WEBRip.x265-haoduo.mp4&quot; ffprobe命令ffprobe是ffmpeg中一个查看多媒体文件信息的模块。此模块可以用来查看多媒体文件格式以及编码。ffprobe的命令较多，这里只简单的列举了一些比较常用的命令。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162-L 显示协议-h/-?/-help/--help topic 帮助可以选择话题-version 显示版本-buildconf 展示编译配置选项-formats 显示支持的编码-muxers 展示支持的封装器-demuxers 展示支持的解封装器-devices 展示支持的设备-codecs 展示支持的编码-decoders 显示支持的解码器-encoders 显示支持的编码器-bsfs 显示支持的比特流过滤器-protocols 展示支持的协议-filters 展示支持的过滤器-pix_fmts 显示支持的像素格式-layouts 展示支持的声道格式-sample_fmts 显示支持的采样格式-colors 展示支持的颜色名称-loglevel loglevel 设置日志级别-v loglevel 设置日志级别-report 生成报告-max_alloc bytes 设置单个已分配块的最大大小-cpuflags flags 指定cpu标志-hide_banner hide_banner 不显示程序横幅-sources device 列出源的输出设备-sinks device 列出输出设备的接收器-f format 指定格式-unit 显示显示值的单位-prefix 对显示的值使用SI前缀-byte_binary_prefix 对字节单位使用二进制前缀-sexagesimal 对时间单位使用六十进制格式 HOURS:MM:SS.MICROSECONDS -pretty 美化显示输出的值，让人可读-print_format format 设置打印格式 (available formats are: default, compact, csv, flat, ini, json, xml)-of format -print_format的编码-select_streams stream_specifier 选择指定的stream-sections 打印节结构和节信息，然后退出-show_data 显示数据包信息-show_data_hash 显示数据包hash值-show_error 显示探测中的错误-show_format 显示格式/容器信息-show_frames 显示帧信息-show_format_entry entry 显示格式/容器信息中的特定条目-show_entries entry_list 显示一组指定的项-show_log 显示log-show_packets 显示packet信息-show_programs 显示程序信息-show_streams 显示stream的信息-show_chapters 显示chapters的信息-count_frames 每个stream中的帧数-count_packets 每个stream中的包数量-show_program_version ffprobe的版本-show_library_versions 库的版本-show_versions 程序和库的版本号-show_pixel_formats 展示像素格式描述-show_private_data 显示私有数据-private 和显示私有数据一样-bitexact 强制提取bit输出-read_intervals read_intervals 设置读取间隔-default 默认所有选项-i input_file 读取指定文件-print_filename print_file 重新显示输入的文件名-find_stream_info 读取并解码流，用启发式方法填充缺失的信息 举个例子说明一下： 1ffprobe -show_format test.mp4 -print_format json 输出为： 1234567891011121314151617181920212223{ &quot;format&quot;: { &quot;filename&quot;: &quot;test.mp4&quot;, &quot;nb_streams&quot;: 2, &quot;nb_programs&quot;: 0, &quot;format_name&quot;: &quot;mov,mp4,m4a,3gp,3g2,mj2&quot;, &quot;format_long_name&quot;: &quot;QuickTime / MOV&quot;, &quot;start_time&quot;: &quot;0.000000&quot;, &quot;duration&quot;: &quot;319.204000&quot;, &quot;size&quot;: &quot;20393093&quot;, &quot;bit_rate&quot;: &quot;511098&quot;, &quot;probe_score&quot;: 100, &quot;tags&quot;: { &quot;major_brand&quot;: &quot;isom&quot;, &quot;minor_version&quot;: &quot;512&quot;, &quot;compatible_brands&quot;: &quot;isomiso2avc1mp41&quot;, &quot;artist&quot;: &quot;张国荣&quot;, &quot;comment&quot;: &quot;163 key(Don't modify):LxuL/bhXK+eaR4o7F6vxHKbEgEKNGLg65XxJgCCH5+sQLLnuMmlonrU27WIYQt6PVE6HRptXEzkJGEUUyqRRgCQJCfXHsb5uK0bdi2lw2dOZM6en1xhkYzGV5bS0uqXI0ZMFdk2CrlfK9x7cKCXIO7AU63YasnAy7YR4dW6boVAOaUvjIWxu5CuHaCLpAF8idLjG4VlAtUpZDj2WEXQJRcZZUFLtJWNVzfbnajHn6j7qG9e0XlNSmOu6RlE/X4MR&quot;, &quot;title&quot;: &quot;追 &quot;, &quot;encoder&quot;: &quot;Lavf56.4.101&quot; } }} Select滤镜常用场景select滤镜的使用方法见官网 1.提取视频关键帧1ffmpeg -i input.mp4 -an -vf select='eq(pict_type\\,I)' -vsync 2 -c:v png image-%03d.png 2.创建缩略图1ffmpeg -i input.mp4 -vf select='gt(scene\\,0.4)',scale=-1:200,tile=4x10 -frames:v 1 preview.png 3.裁剪视频文件的多个部分，并将其合并成一个新的视频使用选择滤镜 1ffmpeg -i video -vf &quot;select='between(t,4,6.5)+between(t,17,26)+between(t,74,91)',setpts=N/FRAME_RATE/TB&quot; -af &quot;aselect='between(t,4,6.5)+between(t,17,26)+between(t,74,91)',asetpts=N/SR/TB&quot; out.mp4 select及其对应的滤波器分别应用于视频和音频，选择的分段是4到6.5秒，17到26秒，最后是74到91秒；时间戳与设置点及其对应的过滤器保持连续。","link":"/2023/08/06/ffmpeg-help/"},{"title":"Git常用命令","text":"初次创建仓库并提交代码 新建文件 1echo &quot;# naviPlayer&quot; &gt;&gt; README.md 初始化本地仓库： 1git init 记录本地新增文件： 1git add README.md 将修改、新增文件提交到本地仓库： 1git commit -m &quot;first commit&quot; 创建分支 main： 1git branch -M main 关联远程仓库： 1git remote add origin git@github.com:tux0529/naviPlayer.git 提交本地仓库到原程仓库： 1git push -u origin main Git更新提交到仓库 在本地修改相应文件（或者文件新旧替换） 记录新增文件、修改文件 1git add （文件路径） 查看当前本地文件信息，查看是否还有文件未跟踪或是未添加到本地库： 1git status 将修改、新增文件提交到本地仓库： 1git commit -m &quot;更改信息备注&quot; 提交代码到当前分支 1git push","link":"/2024/12/05/git-help/"},{"title":"macOS系统使用技巧","text":"1.tree命令自定义mac下默认是没有 tree命令的，不过我们可以使用find命令模拟出tree命令的效果，如显示当前目录的 tree 的命令： 1$ find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g' 当然你也可以写一个别名来快速执行该命令，运行如下命令，将上面这个命令写到~/.bash_profile里，以后直接运行tree命令就更方便了: 1alias tree=&quot;find . -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'&quot; 安装tree命令行工具也可以使用 homebrew 安装 tree 命令行：brew install tree 这样就在你的mac上安装了 tree 命令行了。 tree命令行参数（只实用与安装了tree命令行工具）： -a 显示所有文件和目录。 -A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。 -C 在文件和目录清单加上色彩，便于区分各种类型。 -d 显示目录名称而非内容。 -D 列出文件或目录的更改时间。 -f 在每个文件或目录之前，显示完整的相对路径名称。 -F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上”*”,”/“,”=”,”@”,”|”号。 -g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。 -i 不以阶梯状列出文件或目录名称。 -I 不显示符合范本样式的文件或目录名称。 -l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。 -n 不在文件和目录清单加上色彩。 -N 直接列出文件和目录名称，包括控制字符。 -p 列出权限标示。 -P 只显示符合范本样式的文件或目录名称。 -q 用”?”号取代控制字符，列出文件和目录名称。 -s 列出文件或目录大小。 -t 用文件和目录的更改时间排序。 -u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。 -x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。 2.改变APP图标最近发现有些APP图标实在是难看，忍不住想换个标，就在网上查了下资料，MacOS系统提供了生成icns的命令，我们需要准备一张png的图，这张图最小要1024*1024的分辨率。 制作步骤： 找图找一张分辨率1024*1024的png图片 建图片集目录打开终端输入以下命令：mkdir xxx. iconset注意：必须以.iconset后缀结尾 转换图片把原图片转为不同大小的图片，并放入上面的创建的目录中sips -z 16 16 pic.png –out xxx.iconset/icon_16x16.pngsips -z 32 32 pic.png –out xxx.iconset/icon_16x16@2x.pngsips -z 32 32 pic.png –out xxx.iconset/icon_32x32.pngsips -z 64 64 pic.png –out xxx.iconset/icon_32x32@2x.pngsips -z 128 128 pic.png –out xxx.iconset/icon_128x128.pngsips -z 256 256 pic.png –out xxx.iconset/icon_128x128@2x.pngsips -z 256 256 pic.png –out xxx.iconset/icon_256x256.pngsips -z 512 512 pic.png –out xxx.iconset/icon_256x256@2x.pngsips -z 512 512 pic.png –out xxx.iconset/icon_512x512.pngsips -z 1024 1024 pic.png –out xxx.iconset/icon_512x512@2x.png@2x 的是为retina屏准备的，以上命令执行完后去目录里看下图片是否生成好了 生成图标这一步就是制作icns的最后一步了在命令行中输入一下命令iconutil -c icns xxx.iconset -o xxx.icns这时，目录中就会出现你要的icns图标文件了 替换图标在应用程序中找到想要替换的APP，右键，显示简介，然后把刚才的icns文件拖到简介里就可以了，替换完了之后需要把APP退出后才能看到新的图标。 批量制作可以把制作过程写成一个shell文件，保存成.sh文件，这样就可以批量生成不同大小的图片并执行iconutil命令 123456789101112131415161718192021222324252627282930313233343536373839#!/bin/shif [ x&quot;$1&quot; = x ]; then echo &quot;\\033[31m 请输入要转换的图片全名(PNG格式的图片) \\033[0m&quot; exitfiecho $1newstr=$(tr '[A-Z]' '[a-z]' &lt;&lt;&lt;&quot;$1&quot;)if [[ $newstr != *.png ]]; then echo &quot;\\033[31m 图片不是png格式 \\033[0m&quot; exitfiif [ x&quot;$2&quot; = x ]; then echo &quot;\\033[31m 请输入iconset目录(命名方式xxx.iconset, 务必以 .iconset 结尾) \\033[0m&quot; exitfiif [[ $2 != *.iconset ]]; then echo &quot;\\033[31m iconset目录命令不规范 \\033[0m&quot; exitfi# 生成的图片名name_array=(&quot;icon_16x16.png&quot; &quot;icon_16x16@2x.png&quot; &quot;icon_32x32.png&quot; &quot;icon_32x32@2x.png&quot; &quot;icon_128x128.png&quot; &quot;icon_128x128@2x.png&quot; &quot;icon_256x256.png&quot; &quot;icon_256x256@2x.png&quot; &quot;icon_512x512.png&quot; &quot;icon_512x512@2x.png&quot;)#尺寸size_array=(&quot;16&quot; &quot;32&quot; &quot;32&quot; &quot;64&quot; &quot;128&quot; &quot;256&quot; &quot;256&quot; &quot;512&quot; &quot;512&quot; &quot;1024&quot;)# 创建 iconset 目录if [ ! -d $2 ]; then mkdir $2fifor ((i = 0; i &lt; ${#name_array[@]}; ++i)); do m_dir=$2/${name_array[i]} sips -z ${size_array[i]} ${size_array[i]} $1 --out $m_dirdone# 生成icns 命令iconutil -c icns $2 -o ${2%*&quot;.iconset&quot;}.icns# 生成完之后删除 iconset 文件夹rm -rf $2; 图标下载当然，你也可以去下载现成的 macOS Big Sur - Replacements Icons 图标还原如果想恢复成默认图标，只需要在对应的APP图标上“右键”&gt;“显示简介”，然后选中左上角的图标，按delete键就好了 3 关于.DS_Store 文件阻止 DS_Store 文件的自动生成DS_Store 文件是由系统自动创建的，它的存在有时候会对某些场景下的用户体验产生一些负面的影响。 为了加快网络磁盘的浏览速度，苹果提供了针对通过SMB共享的网络磁盘上DS_Store文件的阻止生成方案： 在「访达」中打开「应用程序」 &gt; 「实用工具」 &gt; 「终端」。 输入以下命令： 1defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE 然后退出登录 macOS 账户并重新登录。 要重新启用，请输入以下命令： 1defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool FALSE 但是，以上命令只是针对网络磁盘，想要阻止本地磁盘中 DS_Store 文件的自动生成？ 唯一的方式就是停止使用「访达」，不过我想大家应该不会考虑这么做。 如何删除 DS_Store 文件首先，要声明的一点是，删除 DS_Store 文件完全是安全的操作，它不会损害电脑，也不会造成个人数据丢失。删除后，「访达」在打开文件夹是会以默认显示模式显示文件夹。在你进行某些「访达」操作后，系统又会在后台自动创建 DS_Store 文件。 如果你想删除 DS_Store 文件，可以通过「终端」App 进行删除。 在「访达」中打开「应用程序」&gt; 「实用工具」 &gt; 「终端」。 定位到你要删除 .DS_Store 文件的文件夹目录下。 在「终端」里输入cd命令，跟上你的目录文件夹路径，例如： cd /Users/username/pictures。 回车。 输入命令 find . -name '.DS_Store' -type f -delete。 再次回车。 到这里，当前文件夹目录下的所有 .DS_Store 文件都会消失。","link":"/2022/08/10/macOS-helper/"},{"title":"让你的各种网络密码无法被人破解","text":"让你的各种网络密码无法被人破解互联网产品各种各样，我们也就拥有了各种各样的帐号密码。网银密码，网站密码等等，大家一般化为了好记，都设置同一个密码，或者很简单的密码。这样就造成自己的帐号被黑客窃取。密码要想不被黑客猜中，有几点非常重要的注意事项 1、不要靠字典中的单词：如果你的密码可以在单词书中找到，那就和没有一样。黑客们经常借助词典以及词汇的变体测试密码.如果你不属于这一类，他们通常就会放弃。 2、一个密码绝对不要使用两次：人们喜欢在不同的网站使用同一密码，这可让黑客有了可乘之机。如果你的LinkedIn账户遭泄露，可能没什么损失;但他们会利用该密码尝试你的电子邮箱、银行账户等一切存储资产及重要个人数据的地方。 3、设置密码短语。密码越长，破解的时间也越长。如果不想让黑客在24小时内能破解你的密码，密码长度应该超过14个字符。因为长密码难于记忆，可考虑用喜欢的电影台词、歌词或一首诗的首字母拼接在一起。 4、胡乱敲击键盘：对于敏感的账户，格罗斯曼先生建议随机乱敲键盘，并间或敲击Shift和Alt键，然后将结果复制到一个文本，存入一个有密码保护的U盘。 5、安全存储你的密码。不要将密码放在收件箱或桌面。如果恶意软件感染电脑，你就完蛋了。格罗斯曼先生将密码文件存入加密U盘，使用帐户时，他把这些密码复制粘贴过去。即便黑客利用键盘记录软件，同样无法捕捉到他的密码。科克先生则把密码提示保存一张纸上，把敏感的信息和互联网彻底隔离。 6、不要依赖密码管理器。密码保护软件可使用户将所有用户名和密码存储在同一区域。有些程序还能为你创建强大的密码，只要你输入主密码，就能帮你自动登录网站。如LastPass、SplashData和AgileBits等等。科克先生认为，即使加密后，密码仍然留在计算机里。如果电脑遭到盗窃，等于丢失所有密码。而且密码管理器不一定靠谱，今年初在阿姆斯特丹举行的安全会议上，黑客们就演示了破解手机密码管理器的技术。 7、安全问题最好答非所问。网站的验证问题经常问道“你最喜欢什么颜色?”“你在哪所中学就读?”，这些问题的答案局限性太大，很容易在互联网上找到。今年初，一名黑客利用米特？罗姆尼(Mitt Romney)最喜欢的宠物的名字破解其Hotmail和Dropbox帐户。比较安全的做法是密码提示和问题无关。如果安全问题问出生医院的名称，你的回答可以是最喜欢的歌词。 8、使用不同的浏览器。不同的网络活动要用不同的浏览器。选择一个浏览器做乱七八糟的事情，如浏览网上论坛、新闻网站、博客等不重要的事情。第二个浏览器用于登录网上银行或收发电子邮件。这样浏览器被攻击后，银行帐户就不一定会泄露。Accuvant Labs去年研究发现，在其所调查的火狐、谷歌Chrome及微软Internet Explorer浏览器中，Chrome最安全。 9、别乱分享你的信息。不要经常利用真实的E-mail地址注册网上帐户。很多“一次性”e-mail地址是最佳选择，如10minutemail.com提供的地址，用户注册、确认在线账户后，这些电子邮件地址会自我销毁。 10、输入任何密码之前一定要搞清楚你当前访问的地址是你想要访问的地址，特别是现在的应用总喜欢用内置的浏览器打开网址，像微信、各个邮箱客户端，打开的网站并不会显示url地址，这样很容易就会碰到李鬼而没有发现。博主最近邮件收到一封自称是纪委的调查邮件，附件是一张二维码，扫码后转到到网易邮箱登录界面，因为是微信打开的网址，所以没有显示地址，用浏览器打开后发现是李鬼，随便用一个账号密码登录之后显示密码错误，然后就转跳到李逵哪里去了。 最后分享一下我的密码设置规则： 我的网络账户被分为3个等级： 1 普通账户，用在一些普通论坛上，比如某一天搜到一个需要的文件在一个论坛里，但是必须注册账户才能下载，这时候就可以用普通账户，可以选择一个统一的账户名和密码，我的用户名就是redtux，密码是好多年前在一个网站上看到的一句话的首字母缩写。用户名要选择一个不容易重复的，我的这个组合用了10多年了，很多时候在一个网站注册的时候发现用户名已经注册了，我就用我的固定账户密码登录就可以进去了。 2 知名一点的账户，QQ，微信，百度，网易之类，用普通账户的密码跟对应网站的名字组合，比如网易密码可以是 普通密码@WangYi，你只要记住一个固定的组合规则，登录的时候就自动能生成密码。 3 涉及财产安全的，银行类，支付宝类的，方法同2，但是生成规则更复杂一点，比如可以加入更多的特殊符号。 这样子就只要记住一个密码和2种规则，就能保证所有账户的密码都不一样，如果其中一个网站被暴库也能保证其他网站的账号安全。","link":"/2018/02/10/skills-password/"},{"title":"Sublime text 4的设置","text":"让状态栏显示文档编码： show_encoding设置为true； 在状态栏中显示行结尾形式：&quot;show_line_endings&quot;: true; 在检测不到文档编码时默认以什么编码打开：&quot;fallback_encoding&quot;: &quot;Chinese (GB18030)&quot;; 在查找后不要关闭查找工具条：&quot;close_find_after_find_all&quot;: false; 在替换所有后不要关闭查找工具条：&quot;close_find_after_replace_all&quot;: false; 123456789101112{ &quot;ignored_packages&quot;: [ &quot;Vintage&quot;, ], &quot;show_encoding&quot;: true, &quot;show_line_endings&quot;: true, &quot;fallback_encoding&quot;: &quot;Chinese (GB18030)&quot;, &quot;close_find_after_find_all&quot;: false, &quot;close_find_after_replace_all&quot;: false,}","link":"/2023/11/22/sublime-text-setting/"},{"title":"Ubuntu Server 常用管理","text":"1.重启网络服务： sudo /etc/init.d/networking restart 或者： service networking restart 2.设置Nameserver（2种方法）： 修改/etc/resolv.conf，但此文件会被resolvconf重写，故应该修改resolvconf配置文件/etc/resolvconf/resolv.conf.d/head， 增加：nameserver 202.96.209.133 修改/etc/network/interfaces，DNS对应的参数名为dns-nameservers，这里设置的优先级比上一种方法高。如果两种方法都设置了，则都会出现在/etc/resolv.conf中。 3.将用户加入 group：usermod -G groupname username (这种会把用户从其他组中去掉，只属于该组)如：usermod -G git git (git只属于git组) usermod -a -G groupname username (把用户添加到这个组，之前所属组不影响)如：usermod -a -G www git (git属于之前git组，也属于www组) 1234567891011121314xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:xxx@xxxx:~$ usermod -G 27 user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:user1xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:xxx@xxxx:~$ usermod -a -G 999 user1xxx@xxxx:~$ cat /etc/group|grep user1user1:x:999:user1xxx@xxxx:~$ cat /etc/group|grep sudosudo:x:27:user1 1xxx@xxxx:~$ useradd -r -m -s /bin/bash -G 27 test1 4.修改时区和时间： 首先查看时区： 12redtux@redtux-PC:~$ date -RThu, 31 May 2018 00:03:22 +0800 修改时区，执行sudo tzselect，按提示选择时区. 复制文件到/etc目录下 sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime 更新时间 sudo ntpdate time.windows.com 5.搜索文件夹并删除1find ./* -name &quot;@eaDir&quot; -type d -print0 | xargs -0 rm -rf 6.gdisk硬盘分区工具gdisk是fdisk分区工具的GPT版，MBR分区格式只能支持最大2T的硬盘，大于2T的硬盘必须采用GPT格式，gdisk就是针对GPT格式的升级版。 gdisk -l /dev/sdX 查看分区信息 gdisk (?|m) 帮助 n 建立分区 d 删除分区 c 更改分区名字 I 显示分区的详细信息 p 显示分区信息 t 转换分区类型 a 将指定分区设置/取消 活动分区 l 查看分区类型 o 重建分区表 v 验证分区表，显示剩余没有被分区划分的扇区数量 q 退出不保存，不保存，所有的修改都不生效 w 退出并保存 执行gdisk /dev/sdx对sdx硬盘进行编辑，分区表编辑完成保存后，需要重新启动系统，否则系统内核还不知道硬盘分区已经改变了，这个时候你ls /dev/sd*查看到的分区情况还是编辑之前的。或者可以先执行partprobe命令试一下看系统是否检测到硬盘分区的变化。 7.blkid 列出所有分区的uuid硬盘根据插拔接口顺序不同可能是sda，也可能是sdb，这样重启后会不能正确的挂载所有的硬盘，为解决这个问题，UUID被文件系统设计者采用，使其可以持久唯一标识一个硬盘分区。其实方式很简单，就是在文件系统的超级块中使用128位存放UUID。这个UUID是在使用文件系统格式化分区时计算生成的，例如Linux下的文件系统工具mkfs就在格式化分区的同时，生成UUID并把它记录到超级块的固定区域中。 使用mkfs对分区格式化后，会显示分区的uuid，如果我们没有记录下来后面怎么查呢，这个就要用到blkid工具了，他可以列出系统中所有硬盘分区的uuid。 8.rsync 远程同步工具rsync 是一个常用的 Linux 应用程序，用于文件同步。 它可以在本地计算机与远程计算机之间，或者两个本地目录之间同步文件（但不支持两台远程计算机之间的同步）。它也可以当作文件复制工具，替代cp和mv命令。 它名称里面的r指的是 remote，rsync 其实就是”远程同步”（remote sync）的意思。与其他文件传输工具（如 FTP 或 scp）不同，rsync 的最大特点是会检查发送方和接收方已有的文件，仅传输有变动的部分（默认规则是文件大小或修改时间有变动）。 用法参考文章 -r 参数本机使用 rsync 命令时，可以作为cp和mv命令的替代方法，将源目录同步到目标目录。 1$ rsync -r source destination 上面命令中，-r表示递归，即包含子目录。注意，-r是必须的，否则 rsync 运行不会成功。source目录表示源目录，destination表示目标目录。 如果有多个文件或目录需要同步，可以写成下面这样。 1$ rsync -r source1 source2 destination 上面命令中，source1、source2都会被同步到destination目录。 -a 参数-a参数可以替代-r，除了可以递归同步以外，还可以同步元信息（比如修改时间、权限等）。由于 rsync 默认使用文件大小和修改时间决定文件是否需要更新，所以-a比-r更有用。下面的用法才是常见的写法。 1$ rsync -a source destination 目标目录destination如果不存在，rsync 会自动创建。执行上面的命令后，源目录source被完整地复制到了目标目录destination下面，即形成了destination/source的目录结构。 如果只想同步源目录source里面的内容到目标目录destination，则需要在源目录后面加上斜杠。 1$ rsync -a source/ destination 上面命令执行后，source目录里面的内容，就都被复制到了destination目录里面，并不会在destination下面创建一个source子目录。 -n 参数如果不确定 rsync 执行后会产生什么结果，可以先用-n或–dry-run参数模拟执行的结果。 1$ rsync -anv source/ destination 上面命令中，-n参数模拟命令执行的结果，并不真的执行命令。-v参数则是将结果输出到终端，这样就可以看到哪些内容会被同步。 –delete 参数默认情况下，rsync 只确保源目录的所有内容（明确排除的文件除外）都复制到目标目录。它不会使两个目录保持相同，并且不会删除文件。如果要使得目标目录成为源目录的镜像副本，则必须使用–delete参数，这将删除只存在于目标目录、不存在于源目录的文件。 1$ rsync -av --delete source/ destination 上面命令中，–delete参数会使得destination成为source的一个镜像。 –exclude 参数有时，我们希望同步时排除某些文件或目录，这时可以用–exclude参数指定排除模式。 123$ rsync -av --exclude='*.txt' source/ destination# 或者$ rsync -av --exclude '*.txt' source/ destination 上面命令排除了所有 TXT 文件。 注意，rsync 会同步以”点”开头的隐藏文件，如果要排除隐藏文件，可以这样写–exclude=”.*”。 如果要排除某个目录里面的所有文件，但不希望排除目录本身，可以写成下面这样。 1$ rsync -av --exclude 'dir1/*' source/ destination 多个排除模式，可以用多个–exclude参数。 1$ rsync -av --exclude 'file1.txt' --exclude 'dir1/*' source/ destination 多个排除模式也可以利用 Bash 的大扩号的扩展功能，只用一个–exclude参数。 1$ rsync -av --exclude={'file1.txt','dir1/*'} source/ destination 如果排除模式很多，可以将它们写入一个文件，每个模式一行，然后用–exclude-from参数指定这个文件。 1$ rsync -av --exclude-from='exclude-file.txt' source/ destination –include 参数–include参数用来指定必须同步的文件模式，往往与–exclude结合使用。 1$ rsync -av --include=&quot;*.txt&quot; --exclude='*' source/ destination 上面命令指定同步时，排除所有文件，但是会包括 TXT 文件。 增量备份rsync 的最大特点就是它可以完成增量备份，也就是默认只复制有变动的文件。 除了源目录与目标目录直接比较，rsync 还支持使用基准目录，即将源目录与基准目录之间变动的部分，同步到目标目录。 具体做法是，第一次同步是全量备份，所有文件在基准目录里面同步一份。以后每一次同步都是增量备份，只同步源目录与基准目录之间有变动的部分，将这部分保存在一个新的目标目录。这个新的目标目录之中，也是包含所有文件，但实际上，只有那些变动过的文件是存在于该目录，其他没有变动的文件都是指向基准目录文件的硬链接。 –link-dest参数用来指定同步时的基准目录。 1$ rsync -a --delete --link-dest /compare/path /source/path /target/path 上面命令中，–link-dest参数指定基准目录/compare/path，然后源目录/source/path跟基准目录进行比较，找出变动的文件，将它们拷贝到目标目录/target/path。那些没变动的文件则会生成硬链接。这个命令的第一次备份时是全量备份，后面就都是增量备份了。 下面是一个脚本示例，备份用户的主目录。 123456789101112131415161718192021222324#!/bin/bash# A script to perform incremental backups using rsyncset -o errexitset -o nounsetset -o pipefailreadonly SOURCE_DIR=&quot;${HOME}&quot;readonly BACKUP_DIR=&quot;/mnt/data/backups&quot;readonly DATETIME=&quot;$(date '+%Y-%m-%d_%H:%M:%S')&quot;readonly BACKUP_PATH=&quot;${BACKUP_DIR}/${DATETIME}&quot;readonly LATEST_LINK=&quot;${BACKUP_DIR}/latest&quot;mkdir -p &quot;${BACKUP_DIR}&quot;rsync -av --delete \\ &quot;${SOURCE_DIR}/&quot; \\ --link-dest &quot;${LATEST_LINK}&quot; \\ --exclude=&quot;.cache&quot; \\ &quot;${BACKUP_PATH}&quot;rm -rf &quot;${LATEST_LINK}&quot;ln -s &quot;${BACKUP_PATH}&quot; &quot;${LATEST_LINK}&quot; 上面脚本中，每一次同步都会生成一个新目录${BACKUP_DIR}/${DATETIME}，并将软链接${BACKUP_DIR}/latest指向这个目录。下一次备份时，就将${BACKUP_DIR}/latest作为基准目录，生成新的备份目录。最后，再将软链接${BACKUP_DIR}/latest指向新的备份目录。 Udisk 管理工具udisksctl: The udisks command line tool udisksctl statusudisksctl info {–object-path OBJECT | –block-device DEVICE | –drive DRIVE}udisksctl mount {–object-path OBJECT | –block-device DEVICE} [–filesystem-type TYPE] [–options OPTIONS…] [–no-user-interaction]udisksctl unmount {–object-path OBJECT | –block-device DEVICE} [–force] [–no-user-interaction]udisksctl unlock {–object-path OBJECT | –block-device DEVICE} [–no-user-interaction] [–key-file PATH] [–read-only]udisksctl lock {–object-path OBJECT | –block-device DEVICE} [–no-user-interaction]udisksctl loop-setup –file PATH [–read-only] [–offset OFFSET] [–size SIZE] [–no-user-interaction]udisksctl loop-delete {–object-path OBJECT | –block-device DEVICE} [–no-user-interaction]udisksctl power-off {–object-path OBJECT | –block-device DEVICE} [–no-user-interaction]udisksctl smart-simulate –file PATH {–object-path OBJECT | –block-device DEVICE} [–no-user-interaction]udisksctl monitorudisksctl dumpudisksctl help 命令手册 完全卸载U盘 1udisksctl power-off --block-device /dev/sdx","link":"/2023/08/18/ubuntu-server/"},{"title":"Microsoft Office及Windows的KMS激活步骤","text":"Docker 部署KMS 服务器Docker镜像地址： https://hub.docker.com/r/mogeko/vlmcsd 此程序的单独地址： https://github.com/Wind4/vlmcsd 部署KMS服务器，使用Docker ，端口为 1688。 1# docker run -d -p 1688:1688 --restart=always --name vlmcsd mikolatero/vlmcsd 1234567docker logs vlmcsd2019-07-27 08:14:00: Listening on [::]:16882019-07-27 08:14:00: Listening on 0.0.0.0:16882019-07-27 08:14:00: vlmcsd svn1112-2-gf1a3c7f, built 2019-07-26 18:11:51 UTC started successfully 查看日志，确定正常工作。 Microsoft Office KMS激活步骤： 以管理员用户打开命令行工具； 切换到office的安装目录，例如office2016安装路径为C:\\\\Program Files\\\\Microsoft Office\\\\Office16； 设置kms服务器：cscript ospp.vbs /sethst:[kms.03k.org](http://kms.03k.org)，返回信息； 12345678910---Processing-----------------------------------------------------------------Successfully applied setting.------------------------------------------Exiting----------------------------- 激活office：`cscript ospp.vbs /act`。 1234567891011121314151617181920212223---Processing-----------------------------------------------------------------Installed product key detected - attempting to activate the following product:SKU ID: d450596f-894d-49e0-966a-fd39ed4c4c64LICENSE NAME: Office 16, Office16ProPlusVL_KMS_Client editionLICENSE DESCRIPTION: Office 16, VOLUME_KMSCLIENT channelLast 5 characters of installed product key: WFG99&lt;Product activation successful&gt;---------------------------------------------------------------------------------Exiting----------------------------- Microsoft Windows KMS激活步骤：1234567891011121314# 卸载已安装密钥slmgr.vbs /upk# 安装需要激活的版本密钥# 这里以专业版为例，Windows 10 和 11 通用# 更多版本的系统密钥见下文slmgr /ipk W269N-WFGWX-YVC9B-4J6C9-T83GX# 设置 KMS 激活服务器# 请将 192.168.7.186 替换为实际 KMS 服务器网址或 IPslmgr /skms 192.168.7.186# 激活slmgr /ato 所有WINDOWS版本的GVLK密钥对照表最新的参看微软官方网站 GVLK密钥是专门用于KMS激活的密钥，如果想使用KMS激活，那么必须先将系统的KEY替换为对应版本的GVLK密钥。 KMS不仅可以激活Windows 8、Windows 8.1和Windows 7、Windows 10这类我们常用的系统，还可以激活各种版本的Windows Server系统。 以下是GVLK密钥版本对照表，可配合KMS服务器进行使用。 WINDOWS SERVER 半年频道版本Windows Server 版本 1909、版本1903 和版本 1809 操作系统版本 KMS 客户端安装程序密钥 Windows Server Datacenter 6NMRW-2C8FM-D24W7-TQWMY-CWH2D Windows Server Standard N2KJX-J94YW-TQVFB-DG9YT-724CC WINDOWS SERVER LTSC/LTSB 版本Windows Server 2019 操作系统版本 KMS 客户端安装程序密钥 Windows Server 2019 Datacenter WMDGN-G9PQG-XVVXX-R3X43-63DFG Windows Server 2019 Standard N69G4-B89J2-4G8F4-WWYCC-J464C Windows Server 2019 Essentials WVDHN-86M7X-466P6-VHXV7-YY726 Windows Server 2016 操作系统版本 KMS 客户端安装程序密钥 Windows Server 2016 Datacenter CB7KF-BWN84-R7R2Y-793K2-8XDDG Windows Server 2016 Standard WC2BQ-8NRM3-FDDYY-2BFGV-KHKQY Windows Server 2016 Essentials JCKRF-N37P4-C2D82-9YXRT-4M63B WINDOWS 10，所有支持的半年频道版本有关受支持的版本和服务终止日期的信息，请参阅 Windows 生命周期情况说明书。 操作系统版本 KMS 客户端安装程序密钥 Windows 10 专业版 W269N-WFGWX-YVC9B-4J6C9-T83GX Windows 10 专业版 N MH37W-N47XK-V7XM9-C7227-GCQG9 Windows 10 专业工作站版 NRG8B-VKK3Q-CXVCJ-9G2XF-6Q84J Windows 10 专业工作站版 N 9FNHH-K3HBT-3W4TD-6383H-6XYWF Windows 10 专业教育版 6TP4R-GNPTD-KYYHQ-7B7DP-J447Y Windows 10 专业教育版 N YVWGF-BXNMC-HTQYQ-CPQ99-66QFC Windows 10 教育版 NW6C2-QMPVW-D7KKK-3GKT6-VCFB2 Windows 10 教育版 N 2WH4N-8QGBV-H22JP-CT43Q-MDWWJ Windows 10 企业版 NPPR9-FWDCX-D2C8J-H872K-2YT43 Windows 10 企业版 N DPH2V-TTNVB-4X9Q3-TJR4H-KHJW4 Windows 10 企业版 G YYVX9-NTFWV-6MDM3-9PT4T-4M68B Windows 10 企业版 G N 44RPN-FTY23-9VTTB-MP9BX-T84FV WINDOWS 10 LTSC/LTSB 版本Windows 10 LTSC 2019 操作系统版本 KMS 客户端安装程序密钥 Windows 10 企业版 LTSC 2019 M7XTQ-FN8P6-TTKYV-9D4CC-J462D Windows 10 企业版 N LTSC 2019 92NFX-8DJQP-P6BBQ-THF9C-7CG2H Windows 10 LTSB 2016 操作系统版本 KMS 客户端安装程序密钥 Windows 10 企业版 LTSB 2016 DCPHK-NFMTC-H88MJ-PFHPY-QJ4BJ Windows 10 企业版 N LTSB 2016 QFFDN-GRT3P-VKWWX-X7T3R-8B639 Windows 10 LTSB 2015 操作系统版本 KMS 客户端安装程序密钥 Windows 10 企业版 2015 LTSB WNMTR-4C88C-JK8YV-HQ7T2-76DF9 Windows 10 企业版 2015 LTSB N 2F77B-TNFGY-69QQF-B8YKP-D69TJ 早期版本的 WINDOWS SERVERWindows Server 版本 1803 操作系统版本 KMS 客户端安装程序密钥 Windows Server Datacenter 2HXDN-KRXHB-GPYC7-YCKFJ-7FVDG Windows Server Standard PTXN8-JFHJM-4WC78-MPCBR-9W4KR Windows Server 版本 1709 操作系统版本 KMS 客户端安装程序密钥 Windows Server Datacenter 6Y6KB-N82V8-D8CQV-23MJW-BWTG6 Windows Server Standard DPCNP-XQFKJ-BJF7R-FRC8D-GF6G4 Windows Server 2012 R2 操作系统版本 KMS 客户端安装程序密钥 Windows Server 2012 R2 Server Standard D2N9P-3P6X9-2R39C-7RTCD-MDVJX Windows Server 2012 R2 Datacenter W3GGN-FT8W3-Y4M27-J84CP-Q3VJ9 Windows Server 2012 R2 Essentials KNC87-3J2TX-XB4WP-VCPJV-M4FWM Windows Server 2012 操作系统版本 KMS 客户端安装程序密钥 Windows Server 2012 BN3D2-R7TKB-3YPBD-8DRP2-27GG4 Windows Server 2012 N 8N2M2-HWPGY-7PGT9-HGDD8-GVGGY Windows Server 2012 单语言版 2WN2H-YGCQR-KFX6K-CD6TF-84YXQ Windows Server 2012 特定国家/地区版 4K36P-JN4VD-GDC6V-KDT89-DYFKP Windows Server 2012 Server 标准版 XC9B7-NBPP2-83J2H-RHMBY-92BT4 Windows Server 2012 MultiPoint 标准版 HM7DN-YVMH3-46JC3-XYTG7-CYQJJ Windows Server 2012 MultiPoint 高级版 XNH6W-2V9GX-RGJ4K-Y8X6F-QGJ2G Windows Server 2012 Datacenter 48HP8-DN98B-MYWDG-T2DCC-8W83P Windows Server 2008 R2 操作系统版本 KMS 客户端安装程序密钥 Windows Server 2008 R2 Web 版 6TPJF-RBVHG-WBW2R-86QPH-6RTM4 Windows Server 2008 R2 HPC 版 TT8MH-CG224-D3D7Q-498W2-9QCTX Windows Server 2008 R2 标准版 YC6KT-GKW9T-YTKYR-T4X34-R7VHC Windows Server 2008 R2 企业版 489J6-VHDMP-X63PK-3K798-CPX3Y Windows Server 2008 R2 Datacenter 74YFP-3QFB3-KQT8W-PMXWJ-7M648 面向基于 Itanium 系统的 Windows Server 2008 R2 GT63C-RJFQ3-4GMB6-BRFB9-CB83V Windows 2008 Server 操作系统版本 KMS 客户端安装程序密钥 Windows Web Server 2008 WYR28-R7TFJ-3X2YQ-YCY4H-M249D Windows Server 2008 标准版 TM24T-X9RMF-VWXK6-X8JC9-BFGM2 不带 Hyper-V 的 Windows Server 2008 标准版 W7VD6-7JFBR-RX26B-YKQ3Y-6FFFJ Windows Server 2008 企业版 YQGMW-MPWTJ-34KDK-48M3W-X4Q6V 不带 Hyper-V 的 Windows Server 2008 企业版 39BXF-X8Q23-P2WWT-38T2F-G3FPG Windows Server 2008 HPC RCTX3-KWVHP-BR6TB-RB6DM-6X7HP Windows Server 2008 Datacenter 7M67G-PC374-GR742-YH8V4-TCBY3 不带 Hyper-V 的 Windows Server 2008 数据中心版 22XQ2-VRXRG-P8D42-K34TD-G3QQC 面向基于 Itanium 系统的 Windows Server 2008 4DWFP-JF3DJ-B7DTH-78FJB-PDRHK 早期版本的 WINDOWSWindows 8.1 操作系统版本 KMS 客户端安装程序密钥 Windows 8.1 专业版 GCRJD-8NW9H-F2CDX-CCM8D-9D6T9 Windows 8.1 专业版 N HMCNV-VVBFX-7HMBH-CTY9B-B4FXY Windows 8.1 企业版 MHF9N-XY6XB-WVXMC-BTDCT-MKKG7 Windows 8.1 企业版 N TT4HM-HN7YT-62K67-RGRQJ-JFFXW Windows 8 操作系统版本 KMS 客户端安装程序密钥 Windows 8 专业版 NG4HW-VH26C-733KW-K6F98-J8CK4 Windows 8 专业版 N XCVCF-2NXM9-723PB-MHCB7-2RYQQ Windows 8 企业版 32JNW-9KQ84-P47T8-D8GGY-CWCK7 Windows 8 企业版 N JMNMF-RHW7P-DMY6X-RF3DR-X2BQT Windows 7 操作系统版本 KMS 客户端安装程序密钥 Windows 7 专业版 FJ82H-XT6CR-J8D7P-XQJJ2-GPDD4 Windows 7 专业版 N MRPKT-YTG23-K7D7T-X2JMM-QY7MG Windows 7 专业版 E W82YF-2Q76Y-63HXB-FGJG9-GF7QX Windows 7 企业版 33PXH-7Y6KF-2VJC9-XBBR8-HVTHH Windows 7 企业版 N YDRBP-3D83W-TY26F-D46B2-XCKRJ Windows 7 企业版 E C29WB-22CC8-VJ326-GHFJW-H9DH4","link":"/2023/08/14/windows-office-kms/"},{"title":"Xcode安装多个版本并切换版本","text":"安装Xcode我们有时候为了适配不同设备，需要安装多个xcode版本，新的版本，老的版本。Xcode各版本兼容性可查看官方这个页面。然后在这个页面下载对应版本，下载到的文件是自解压格式xip，双击自动解压到当前目录为Xcode.app。加上版本号之后移动到/Applications目录下，如下载的14.3.1版，可以重命名为Xcode14.3.app。 显示当前使用的xcode:xcode-select -p ,显示如下： 1/Applications/Xcode.app/Contents/Developer 查看xcode版本号： xcodebuild -version 12Xcode 14.2Build version 14C18 切换版本： 1sudo xcode-select -s /Applications/Xcode14.3.app/Contents/Developer 安装Command Line Tools一般Xcode安装后，第一次打开时，会弹窗提示安装Command Line Tools，直接安装即可。 如果当时没有安装，后面也可以单独安装。 123xcode-select --install // 安装命令xcode-select --version // 查看版本 有时Command Line Tools出了问题，可以先尝试恢复默认设置来解决： 12// 恢复默认设置（需要sudo权限）sudo xcode-select --reset 还是解决不了，可以考虑删掉后重新安装： 12345// 强制删除安装目录下的文件sudo rm -rf /Library/Developer/CommandLineTools// 重新安装xcode-select --install 除了终端命令的安装方式，也可以到苹果开发者官网的下载专区搜索Command Line Tools并下载安装包。你也可以去xcodereleases网站找到各种版本Xcode的下载链接。","link":"/2024/08/02/xcode/"},{"title":"中医方剂收藏","text":"二陈汤二陈汤，中医方剂名。为祛痰剂，具有燥湿化痰，理气和中之功效。主治湿痰证。咳嗽痰多，色白易咯，恶心呕吐，胸膈痞闷，肢体困重，或头眩心悸，舌苔白滑或腻，脉滑。临床常用于治疗慢性支气管炎、慢性胃炎、梅尼埃病、神经性呕吐等属湿痰者。 方剂名：二陈汤方剂组成： 陈皮(或橘红)、制半夏、 茯苓、炙甘草方剂方解：燥湿化痰，理气和中，用于脾虚痰湿阻滞之咳嗽痰多而呈清稀泡沫、胸闷呕恶、头晕心悸、苔白腻、脉滑等症、本方多用于慢性支气管炎、肺气肿之咳嗽痰稀之症。 方剂用法用量：半夏(汤洗七次)、橘红各15g，白茯苓9g，甘草(炙)4.5g。上药㕮咀，每服12g，用水一盏，生姜七片，乌梅一个，同煎六分，去滓，热服，不拘时候。现代用法：加生姜7片，乌梅1个，水煎温服。 方剂附方：杏苏散，即二陈汤加紫苏、杏仁、前胡、桔梗、枳壳、生姜、大枣、功能宣肺止咳化痰、用于外感风寒咳嗽痰多之证温胆汤，即二陈汤加枳实、竹茹、用于痰热内扰虚烦不得眠者导痰汤，即二陈汤加枳实、胆星，用于痰多喘急时发晕厥，头痛眩晕，或咯痰粘稠，坐卧不安者 半夏白术天麻汤，即二陈汤加白术、天麻、用于痰湿中阻，头痛眩晕、恶心呕吐、胸脘痞闷、苔白滑腻脉滑之证。 方剂备注：本方是治疗湿痰的要方。湿痰之成，多因饮食生冷，脾胃不和，运化失健，以致湿聚成痰。方中半夏燥湿化痰，和胃止呕；橘红理气化痰，使气顺则痰降。气行则痰化；痰由湿生，故以茯苓健脾渗湿；甘草和中益脾。煎加生姜，既制半夏之毒，又协同半夏、橘红和胃祛痰止呕；少用鸟梅，味酸收敛，配半夏散中有收，使其不致辛散太过。凡是痰湿为患，均可用本方增损治之。 方剂功能主治：脾胃虚寒，胸腹胀满，呕逆不食，自利不渴，因伤宿食，或吐后噫败脾气。伤寒汗后，脾胃伤冷物，胸膈不快，寻常血气不和；太阴伤寒，手足温，自利不渴，腹满时痛，咽干，脉尺寸俱沉细；饮食伤脾，宿谷不化，朝食暮吐，暮食朝吐，上气复热，四肢冷痹，三焦不调，及胃虚寒气在上，忧气在下，二气并争，但出不入，呕不得食；中寒，饮食不化，吞酸哯啘，食则膨亨，胀满呕逆；脾胃不和，饮食减少，短气虚羸而复呕逆，霍乱吐泻，胸痹心痛，逆气短气，中满虚痞，膈塞不通，或大病愈后，胸中有寒，时加咳唾；霍乱吐泻，泻血不止；脏寒冷气，腹痛肠鸣，下痢青黑；食积，心腹满痛；忧思郁结，脾肺气凝，胀满上冲，饮食不下，腹满痞闷，兼食积者；冷食粘滞。 方剂临床应用：伤寒劳复《本事》：有人患伤寒得汗数日，忽身热自汗，脉弦数，心不得宁，真劳复也。予诊曰：劳心之所致，神之所舍，未复其初，而又劳伤其神，荣卫失度，当补其子，益其脾，解发其劳，庶几得愈。授以本方，佐以小柴胡得解。 三子养亲汤 三子养亲汤，是传统的中药方剂，用于降气消食、温化痰饮之功的方剂，主要治疗老人中虚喘嗽，痰壅气滞之症。此方出自《韩氏医通》，莱菔子就是萝卜子，苏子是紫苏的种子，白芥子是芥菜的种子，三味本草都是植物的种子，种子都有油性，能滋润，且性质都是往下降的，能通便。三个药加在一起，把老人的吃喝拉撒以及平时可能有的一些小毛病全管了。如今，三子养亲汤被广泛应用于现代人的“代谢综合征”，用于去除体内有形及无形之痰。 方剂名：三子养亲汤 方剂组成：苏子、白芥子、莱菔子 方剂方解：本方治证乃因伤食生痰，痰壅气滞，肺失宣降所致。治宜下气消痰，宣肺止咳。方中紫苏子下气消痰，止咳平喘；白芥子利气豁痰；莱菔子降气祛痰，行滞消食。三药合用，可使气顺痰化食消，咳逆自平。三子皆治痰之药，而又能于治痰之中各逞其长，临证当视气、痰、食三者之孰重孰轻，以定君药，余为臣药。原方三子，为事亲者设，故名“三子养亲汤”。 用法用量：紫苏子（主气喘咳嗽），白芥子（主痰），萝卜子（主食痞兼痰）。上三味各洗净，微炒，击碎，看何证多，则以所主者为君，余次之，每剂不过三钱，用生绢小袋盛之，煮作汤饮，随甘旨，代茶水啜用，不宜煎熬太过。 注意事项：1、本方下气作用较强，消瘦、气血两虚、阴虚者不宜服用。 2、建议使用时间为2—4周，不建议服用过长时间。 临床应用郭某，女，4岁。2010年4月13日诊。患儿咳嗽反复发作已2年余，每于感冒之后即咳嗽吐白痰不已。本次发病乃两日前感冒，后咳嗽不止，痰多色白，伴食欲不振，舌苔白厚腻，脉滑。曾用西药抗炎治疗无效，又遍寻老中医治疗，收效甚微，后邀余诊治。据其脉症，余辨此证乃属食滞伤风，化痰滞于肺脾，成痰壅食滞气逆之证。故拟以消食化痰，降气止咳，用三子养亲汤加味。处方。苏子6克 白芥子5克 莱菔子9克 茯苓12克 半夏6克 陈皮6克 前胡6克 紫菀6克 焦三仙各10克 内金6克。三剂后，咳嗽吐痰明显减轻，食量增加，效不更方。原方又进3剂，病告痊愈。追访：后又贪食受风发作1次，遵原法治疗而愈，以后再未发作。 粱某，男，58岁，2001年8月2日初诊。气喘反复发作20年，加重15天。患者于20年前开始气喘，症状反复发作，逐渐加重。初病时多于冬季发病，近几年发作频繁，无规律性。此次于半月前因感冒后气喘发作，用西药抗炎、平喘、解痉等方法治疗，症状好转不明显。现症见气喘，不能平卧，夜间为甚，痰白黏而少，无发热，无明显咳嗽。诊见面色暗红少泽，舌质暗红偏淡，舌苔白，脉虚数。X线胸部正位片示两肺纹理粗乱。中医诊为哮喘，证属寒痰内积，瘀血夹杂，肺气不足。西医诊断：支气管哮喘。治法：温化寒痰，活血通络，降逆平喘。方用三子养亲汤加味。处方：苏子7克 炒莱菔子7克 白芥子7克 前胡10克 陈皮5克 半夏10克 干姜7克 五味子7克 艾叶10克 桔梗10克 枳壳7克 地龙7克。三剂，水煎服，每日一剂。","link":"/2024/09/04/%E4%B8%AD%E5%8C%BB%E6%96%B9%E5%89%82%E6%94%B6%E8%97%8F/"},{"title":"安装Bind9用于本地域名解析","text":"对于家里的移动客户端，在家的时候用Wi-Fi，在外的时候用的移动网，那我们希望在家用Wi-Fi的时候可以直接连内网ip，而不需要连公网ip再转发到Nas的内网ip。以前用小米路由器的时候可以自定义hosts，非常方便。群晖中有一个DNS Server套件可以实现域名直接解析到内网IP，Ubuntu中可以安装Bind9实现同样功能。 Bind9的官方Howto在这里 Bind9安装 12sudo apt updatesudo apt install bind9 Bind9的配置文件位于/etc/bind/，主要配置文件为下面的三个： 123/etc/bind/named.conf/etc/bind/named.conf.options/etc/bind/named.conf.local 配置转发DNS地址，就是当本地没有解析记录的，就转发到指定的DNS地址解析。编辑配置文件/etc/bind/named.conf.options，指定转发DNS，一般填大网络公司的公共DNS，谷歌8.8.8.8；阿里：223.5.5.5等: 12345678[...]forwarders { 8.8.8.8; 114.114.114.114;};[...] 现在Bind9就可以工作了，重启Bind9: 1sudo service bind9 restart 现在就可以在路由器的DHCP设置中将DNS服务器地址设置为NAS的IP了。 接下来我们要编辑区域文件/etc/bind/named.conf.local，增加我们要解析的域名Zone: 12345678[...]zone &quot;example.com&quot; { type master; file &quot;/etc/bind/db.example.com&quot;;};[...] 这一段记录example.com域名的解析文件为/etc/bind/db.example.com，接下来我们编辑/etc/bind/db.example.com，/etc/bind目录中有一份样板文件db.local: 1sudo cp /etc/bind/db.local /etc/bind/db.example.com 编辑区域文件/etc/bind/db.example.com，把localhost修改为你的域名example.com，保留后面的点，把127.0.0.1修改为本机IP，root.localhost. 修改为邮件地址，只不过要把@替换为.，同样末尾点保留。 增加一条A记录，把ns.example.com解析到DNS服务器IP，然后就可以添加其他子域名解析，比如我只有一台NAS，所有的记录都解析到NAS的IP上，修改完大概就是这样子： 1234567891011121314151617;; BIND data file for local loopback interface;$TTL 604800@ IN SOA ns.example.com. root.example.com. ( 1 ; Serial 604800 ; Refresh 86400 ; Retry 2419200 ; Expire 604800 ) ; Negative Cache TTL;@ IN NS ns.example.com.ns IN A 192.168.1.10;also list other computerswww IN A 192.168.1.10music IN A 192.168.1.10 这样内网访问www.example.com和music.example.com都会解析到192.168.1.10。 注意每次修改此文件，都需要把Serial值增加一次，这样重启的时候Bind9就会知道配置文件有修改。 很多人喜欢用修改日期来作为Serial的值，例如 2023080500，表示2023年8月5日第一次修改。 修改完成后记得重启bind9： 1sudo service bind9 restart 这样移动设备连接内网的时候，从路由器获取的DNS服务器就是你的NAS地址，NAS就会把你的域名解析到NAS上。这样你就可以用一个域名根据网络环境自动切换内网和外网了。 当然，Bind9除了用来解析域名到局域网外，还可以用来解析某些被DNS劫持的域名，我们可以先去https://tools.ipip.net/dns.php，查询一下域名对应IP，再ping一下选一个延迟低丢包少的ip，然后配置bind9，把域名解析到查询到的ip上。","link":"/2023/08/05/Nas/bind9-dns-server/"},{"title":"安装docker及docker-compose","text":"卸载旧版本在你安装docker之前一定要把系统中的旧版本卸载掉，一半系统发行商在官方apt源中带有docker，但是不是最新版的，如果你是全新安装的系统，你还没有安装过docker，那就可以省掉这一步。 需要卸载掉的非官方包包括: docker.io docker-compose docker-doc podman-docker 运行如下命令卸载这些包： 1$for pkg in docker.io docker-doc docker-compose podman-docker containerd runc; do sudo apt-get remove $pkg; done apt-get 可能会提示你这些包没有安装。 Images, containers, volumes, and networks 存储在 /var/lib/docker/ 目录中不会自动删除，如果你想要一个全新安装的docker，你最好手动删除他们。 安装途径你可以根据你的需要使用如下方法安装docker： 安装docker桌面版，桌面版包含了docker，这是最简单最快捷的方法； 从Docker的官方apt库安装； 自己手动安装； 用脚本自动安装，只推荐用在测试和开发环境中。 从Docker的官方apt库安装在新装系统第一次安装Docker之前，首先要设置Docker的官方apt库，设置apt库之后就可以使用apt命令安装了。 设置Docker的官方apt库按照如下命令，安装一些工具和允许使用https协议： 12sudo apt-get updatesudo apt-get install ca-certificates curl gnupg 添加Docker的官方GPG key: 123sudo install -m 0755 -d /etc/apt/keyringscurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpgsudo chmod a+r /etc/apt/keyrings/docker.gpg 按照如下命令设置Docker的官方apt库： 1234echo \\ &quot;deb [arch=&quot;$(dpkg --print-architecture)&quot; signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\ &quot;$(. /etc/os-release &amp;&amp; echo &quot;$VERSION_CODENAME&quot;)&quot; stable&quot; | \\ sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null 注意 If you use an Ubuntu derivative distro, such as Linux Mint, you may need to use UBUNTU_CODENAME instead of VERSION_CODENAME. 更新包索引： 1sudo apt-get update 安装 Docker Engine 运行如下命令安装最新版Docker： 1sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin 如果要安装特定版本Docker，可以先用如下命令列出可用版本： 12# List the available versions:$ apt-cache madison docker-ce | awk '{ print $3 }' 返回可用的版本号： 1235:24.0.0-1~ubuntu.22.04~jammy5:23.0.6-1~ubuntu.22.04~jammy&lt;...&gt; 选择你期望的版本进行安装： 12VERSION_STRING=5:24.0.0-1~ubuntu.22.04~jammysudo apt-get install docker-ce=$VERSION_STRING docker-ce-cli=$VERSION_STRING containerd.io docker-buildx-plugin docker-compose-plugin 运行一下 hello-world 镜像验证Docker是否安装成功。 1sudo docker run hello-world 这条命令会下载hello-world镜像，并在一个新建的容器中运行。 到此Docker就已经安装成功了。 安装 docker-compose上面已经安装了docker compose插件，可以通过docker compose命令运行，就是版本会旧一些，最新版的可以去docker-compose的Github下载二进制文件，然后复制到PATH路径中。 卸载 Docker Engine1.Uninstall the Docker Engine, CLI, containerd, and Docker Compose packages: 1sudo apt-get purge docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin docker-ce-rootless-extras 2.Images, containers, volumes, or custom configuration files on your host aren’t automatically removed. To delete all images, containers, and volumes: 12sudo rm -rf /var/lib/dockersudo rm -rf /var/lib/containerd You have to delete any edited configuration files manually. Docker服务控制停止Docker服务 1systemctl stop docker 启动Docker服务 1systemctl start docker 重新启动Docker服务 1systemctl restart docker Docker常用命令 docker start : 启动一个容器 docker restart : 重新启动一个容器 docker stop : 关闭一个容器 docker status : 查看docker运行状态 docker ps : 列出正在运行的容器 docker volume : 新建docker卷 docker run : 从一个镜像放在新建的容器中运行。 其他详细命令可以参考官方文档 其他特定命令：获取容器ID为282c7625119d的ip 1docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' 282c7625119d 启动所有容器： 1docker start $(docker ps -aq) 关闭所有容器： 1docker stop $(docker ps -aq) 创建时设置容器开机自启： 1docker run -d --restart=always -name 容器名 使用镜像 修改已有容器开机自启： 12docker update --restart=always 容器ID(或者容器名)（容器ID或者容器名根据实际情况修改） 对已有docker容器增加新的端口映射 1、 docker ps -a #查看容器的信息 2、 docker port 容器ID/容器名称 #查看容器的端口映射情况 3、 docker inspect 容器ID |grep Id #查找要修改容器的全ID 4、 cd /var/lib/docker/containers/全ID #进到全Id相同的目录，修改 其中的hostconfig.json 和 config.v2.json文件： #注意：若该容器还在运行中，需要先停掉 docker stop 容器ID #再停掉docker服务 systemctl stop docker 5、修改hostconfig.json如下 # 格式如：”{容器内部端口}/tcp”:[{“HostIp”:””,”HostPort”:”映射的宿主机端口”}]“PortBindings”:{“22/tcp”:[{“HostIp”:””,”HostPort”:”3316”}],”80/tcp”:[{“HostIp”:””,”HostPort”:”180”}]} {“5432/tcp”:[{“HostIp”:””,”HostPort”:”5432”}]} 6、修改config.v2.json在ExposedPorts中加上要暴露的端口 # 格式如：”{容器内部端口}/tcp”:{} “ExposedPorts”:{“22/tcp”:{},”80/tcp”:{}} {“5432/tcp”:{}} 修改docker镜像源镜像源参考中国区官方镜像：https://registry.docker-cn.com中科大源：https://docker.mirrors.ustc.edu.cn阿里源：https://cr.console.aliyun.com腾讯源：https://mirror.ccs.tencentyun.com网易源：http://hub-mirror.c.163.com 1、关闭 Docker 服务 2、修改配置文件 创建或修改/etc/docker/daemon.json文件，默认没有daemon文件，先创建。 1vim /etc/docker/daemon.json 增加/更新”registry-mirrors”字段 12345{ &quot;registry-mirrors&quot;: [ &quot;https://docker.mirrors.ustc.edu.cn&quot; ]} 注：需确认”daemon.json”的位置。 3、重启 Docker 服务","link":"/2023/08/05/Nas/docker-docker-compose/"},{"title":"替代群晖相册的工具：immich","text":"一直以来，我都用群晖自带的 Photos 来备份手机照片，因为除了群晖相册之外，还没用过其他好用的相册工具，自从上次群晖文件系统都变成只读之后就有了用Ubuntu替换群晖的想法。然后就在网络中发现了Immich，immich有Android手机客户端，可以直接从f-droid安装。 官方部署教程 下面简要记录部署教程： 下载安装部署必要文件我们使用docker-compose部署，首先创建一个存储docker-compose.yml 和 .env 文件的目录. 12mkdir ./immich-appcd ./immich-app 下载docker-compose.yml 和 example.env文件 下载docker-compose.yml文件 1wget https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml 下载.env文件 1wget -O .env https://github.com/immich-app/immich/releases/latest/download/example.env 或者用浏览器下载这两个文件，然后放到刚刚创建的目录中。 Note: If you downloaded the files from your browser, also ensure that you rename example.env to .env. 修改.env文件中的变量值 Populate custom database information if necessary. UPLOAD_LOCATION 设置成你的照片存储路径. DB_PASSWORD 设置数据库的密码 TYPESENSE_API_KEY 设置成随机字符串。 可以修改docker-compose.yml文件，在Postgres数据库那里增加5432端口映射，把Postgres容器的5432端口映射到本地，这样后期本地安装应用的时候可以用到docker的数据库。 创建容器From the directory you created in Step 1, (which should now contain your customized docker-compose.yml and .env files) run docker-compose up -d. Start the containers using docker compose command 1docker-compose up -d # or `docker compose up -d` based on your docker-compose version 现在可以访问http://&lt;machine-ip-address&gt;:2283开始创建你的管理员账户了。 设置Nginx反向代理12345678910111213141516171819202122232425262728293031323334353637383940414243server { listen 618 default_server; listen [::]:618 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don't use them in a production server! # # include snippets/snakeoil.conf; #root /var/www/start; # Add index.php to the list if you are using PHP #index index.html index.htm index.nginx-debian.html; server_name www.redtux.cn; client_max_body_size 50000M; location / { proxy_pass http://127.0.0.1:2283; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; # http://nginx.org/en/docs/http/websocket.html proxy_http_version 1.1; proxy_set_header Upgrade $http_upgrade; proxy_set_header Connection &quot;upgrade&quot;; proxy_redirect off; }} 升级Immich的版本迭代速度相当快，如果有新版本发布，可以切换到docker-compose.yml文件存放到目录，然后执行如下命令： 1docker-compose pull &amp;&amp; docker-compose up -d # Or `docker compose up -d` 备份数据库The recommended way to backup and restore the Immich database is to use the pg_dumpall command. 备份1docker exec -t immich_postgres pg_dumpall -c -U postgres | gzip &gt; &quot;/path/to/backup/dump.sql.gz&quot; 恢复1234567docker-compose down -v # CAUTION! Deletes all Immich data to start from scratch.docker-compose pull # Update to latest version of Immich (if desired)docker-compose create # Create Docker containers for Immich apps without running them.docker start immich_postgres # Start Postgres serversleep 10 # Wait for Postgres server to start upgunzip &lt; &quot;/path/to/backup/dump.sql.gz&quot; | docker exec -i immich_postgres psql -U postgres -d immich # Restore Backupdocker-compose up -d # Start remainder of Immich apps 桌面系统上传工具依赖 Node.js 16以上版本和npm 安装node.js后执行如下命令安装immich桌面端上传工具： 1npm i -g immich 把本地目录~/toUpload中的照片上传到服务器： 1immich upload --key sikjo7P3o5jLddv3pfiDjH3RVfj4yIuptOti8SetM --server http://192.168.0.6:2283/api --recursive ~/toUpload 把本地目录~/toUpload中的照片上传到服务器，并加入到AlbumName相册中： 1immich upload --key sikjo7P3o5jLddv3pfiDjH3RVfj4yIuptOti8SetM --server http://192.168.0.6:2283/api --recursive --album AlbumName ~/toUpload 选项： Parameter Description –yes / -y Assume yes on all interactive prompts –recursive / -r Include subfolders –delete / -da Delete local assets after upload –key / -k User’s API key –server / -s Immich’s server address –threads / -t Number of threads to use (Default 5) –album/ -al Create albums for assets based on the parent folder or a given name –import/ -i Import gallery (assets are not uploaded) 号外还有一个相册工具 PhotoPrism，这是一个优秀的成熟的相册，唯一缺憾就是没有手机客户端。","link":"/2023/08/05/Nas/immich/"},{"title":"信息系统管理工程师主观题考点","text":"信息系统管理工程师主观题考点信息系统开发基础信息系统1. 信息系统组成部分？ 计算机硬件系统; 计算机软件系统、 数据及其存储介质、 通信系统、 非计算机的信息收集和处理设备； 规章制度； 工作人员。 2. 信息系统主要类型？ 面向作业处理的系统； 面向管理控制的系统； 面向决策计划的系统； 3. 信息系统对企业的影响？ 促使组织机构扁平化； 组织机构更加灵活有效； 虚拟办公室； 增加企业流程重组的成功率； 4. 信息系统有哪些开发阶段？ 系统规划阶段： 可行性研究，制定初步任务计划。输出可行性分析报告和项目计划书。 系统分析阶段： 解决做什么的问题。分析用户需求，再将用户需求转换为逻辑模型。输出需求规格说明书、逻辑模型。 系统设计阶段： 解决这么做的问题。分概要设计、详细设计，将逻辑模型转换为物理模型形成系统设计说明书，作为系统实施的依据。输出设计文档、物理模型。 系统实施阶段： 把物理模型转换为可实际运行的系统。内容为物理系统的实施、程序设计、系统调试、人员培训、系统切换。输出可运行的系统。 系统运行和维护： 系统运行、系统运行管理、系统维护。是信息系统生命周期中花钱最多、延续时间最长的阶段。 项目管理1. 战略管理和项目管理的区别和联系？ 区别： 战略管理立足于长远和宏观，考虑的是企业的核心竞争力，以及围绕核心竞争力的企业流程再造、业务外包和供应链管理等问题； 项目管理则立足于一定的时期，相对微观，主要考虑有限的目标、学习型组织和团队合作等问题 联系： 战略管理指导项目管理，项目管理支持战略管理，没有项目管理，公司的战略目标就无法顺利实现 2. 项目的定义？ 基本概念： 在既定资源和要求的约束下，为实现某种目的而相互联系的一次性工作任务，包含如下三个层次： 一定的资源约束：时间、经费、人力等资源； 一定的目标； 一次性任务； 基本特征： 明确的目标、独特的性质、有限的生命周期、特定的委托人、实施的一次性、组织的临时性和开放性、不确定性和风险性、结果的不可逆性。 3. 信息系统项目？ 信息系统项目 是智力密集、劳动密集型项目，受人力资源影响最大、项目团队的结构、责任心和稳定性对项目的质量和是否成功有决定性的影响。 特点： 目标不明确，任务边界模糊，质量要求主要有项目团队定义； 开发过程中，客户需求易变化，导致项目计划的不断变更； 客户的需求不断被激发、不断被进一步明确； 客户需求随项目进展而变化； 项目的进度、费用等计划会不断更改； 4. 项目管理 项目管理9大体系： 项目范围管理； 项目进度管理； 项目质量管理； 项目成本管理； 项目人力资源管理； 项目沟通管理； 项目采购管理； 项目风险管理； 项目综合管理； 基本特点： 项目管理是一项复杂的工作； 项目管理具有创造性； 项目管理需要集权领导并建立专门的项目组织； 项目负责人在项目管理中起着非常重要的作用； 系统分析系统分析阶段是信息系统开发最重要的阶段。 1.系统分析的任务？ 主要任务： 理解和表达用户对系统的应用需求。 了解用户需求。 确定系统逻辑模型。 完成系统分析报告。为系统设计提供依据。 2. 系统分析的步骤？ 现行系统的详细调查 进行需求分析 提出新系统的逻辑模型 编写需求规格说明书。 3. 系统说明书系统说明书是系统分析阶段工作的全面总结，是这一阶段的主要成果。系统说明书应达到的基本要求是：全面、系统、准确、详实、清晰第表达系统开发的目标、任务和系统功能。 4. 系统分析报告作用 描述了目标系统的逻辑模型，可作为开发人员进行系统设计和实施的基础； 作为用户和开发人员之间的协议或合同，为双方的交流和监督提供基础。 作为目标系统验收和评价的依据。 系统设计1. 系统设计的目标？ 系统的可靠性 较高的系统运行效率 可变更性 经济性 2. 系统设计的原则？ 系统性原则 简单性原则 开放性原则 管理可接受原则 其他原则 3. 系统设计的内容？ 总体设计： 也叫概要设计 总体布局设计（网络拓扑结构设计、资源配置设计）； 模块化结构设计（划分功能模块、模块功能和职责、模块间的调用关系、模块间的信息传递）。 详细设计： 代码设计 数据库设计 输入输出设计 用户界面设计 处理过程设计 4. 系统的处理过程设计的描述方式？ 图形： 系统流程图 IPO图 HIPO图 控制结构图 数据流程图 模块结构图 程序框图 5. 模块结构设计原则？ 高聚合低耦合 系统分解有层次 适宜的深度和宽度比例 模块大小适中 适度控制模块的扇入扇出 较小的数据冗余 系统实施系统实施 目标： 实现系统设计阶段提出的物理模型，按实施方案完成一个可以实际运行的信息系统，并交付用户使用 主要活动： 根据系统设计所提供的控制结构图、数据库设计、系统配置方案及详细设计资料，编制和调试程序，调试系统、进行系统切换等工作，将技术设计转化为物理实际系统。 实施内容： 硬件配置 软件编码 人员培训 数据准备 注意事项： 尽可能选择成熟的软件产品 选择好信息系统的开发工具 关键因素： 进度安排（进度计划是实施的基本保证） 人员组织（程序编码是实施阶段的主要任务） 任务分解 开发环境构建 系统测试1. 系统测试的目标 为了发现错误而执行程序的过程。 好的测试方案能够发现迄今为止尚未发现的错误 成功的测试将发现至今尚未发现的错误。 2. 测试过程 拟定测试计划 编制测试大纲 设计和生成测试用例 实施测试 生成测试报告 3. 测试原则 所有测试有应追溯到用户需求； 尽早的不断的测试； 避免开发人员人员来承担，除开单元测试； 在设计测试方案时，不仅要确定输入数据而且要确定输出结果； 在设计测试用例时，不仅要包括合理有效的输入条件，也要包括不合理无效的输入条件； 测试程序时，既要测试程序是否做了该做的事，也要测试是否做了不该做的事； 充分重视测试中的群集现场； 严格按照测试计划进行测试，避免测试的的随意性； 妥善保存测试计划、用例 4. 什么是动态测试动态测试也称为动态分析。 主要特征： 是计算机必须真正运行被测试的程序，通过输入测试用例，对其运行情况进行分析，判断期望结果和实际结果是否一致。 包括： 功能确认 接口测试 覆盖率分析 性能分析 内存分析 压力测试： 在动态分析中，通过最大资源条件进行系统压力测试，以判断系统的实际承受能力，尤其是在通讯比较复杂的系统中尤为重要。 黑盒测试法： 功能性测试，不了解软件代码结构，根据功能设计用例，测试软件功能。 白盒测试法： 结构性测试，明确代码流程，根据代码逻辑设计用例，进行用例覆盖。 灰盒测试法： 既有黑盒，也有白盒。 5. 静态测试 主要特征： 是在用计算机测试源程序时，计算机并不真正运行被测试的程序。 包括： 代码检查 静态结构分析 代码质量度量等 方式： 可以由人工进行，也可以借助软件工具自动进行。 桌前检查： 程序员检查自己编写的程序，在程序编译后，单元测试前。 代码审查： 由若干个程序员和测试人员组成评审小组，通过召开程序评审会来进行审查。 代码走查： 也是采用开会来对代码进行审查，但并非简单的检查代码，而是由测试人员提供测试用例，让程序员扮演计算机的角色，手动运行测试用例，检查代码逻辑。 6. 测试中可能发现的错误 功能错误 系统错误 过程错误 数据错误 编程错误 7. 硬件测试在进行信息系统开发中，通常需要根据项目的情况选购硬件设备。在设备到货后，应在各个相关厂商配合下进行初验测试，初验通过后将硬件与软件、网络等一起进行系统测试。初验测试所做的工作主要如下： 配置检测： 硬件设备的外观检查： 硬件测试： 8. 网络测试如果信息系统不是单机，需要在局域网或广域网运行，按合同会选购网络设备。在网络设备到货，应在各个相关厂商配合下进行初验测试。初验通过后网络将与软件、硬件等一起进行系统测试。初验测试所做的工作如下： 网络设备的外观检查： 硬件测试： 网络连通测试： 9. 软件测试软件测试实际上分为四步，按下面顺序进行： 单元测试：对源程序每一个程序单元进行测试，验证每个模块是否满足系统设计说明书的要求； 组装测试：将已测试过的模块组合成子系统，重点测试各模块之间的接口和联系； 确认测试：对整个软件进行验收，根据系统分析说明书来考察软件是否满足要求； 系统测试：将软件、硬件、网络等系统等各个部分连接起来，对整个系统进行总的功能、性能等方面的测试。 10. 白盒测试用例设计 语句覆盖SC： 判定覆盖DC： 条件覆盖CC： 条件判定组合覆盖CDC： 多条件覆盖MCC： 修正判定条件覆盖MCDC： 路径覆盖：所有可行路径都覆盖了，覆盖层级最高。 信息化1. 国家信息化在国家统一规划和组织下，在农业、工业、科学技术、国防和社会生活各个方面应用现场信息技术，深入开发，广泛利用信息资源，发展信息产业，加速实现国家现代化进程。 2. 国家信息化建设的信息化政策法规体系 信息技术发展政策： 信息产业发展政策： 电子政务发展政策： 信息化法规建设： 3. 国家信息化的4层含义 一是实现四个现代化离不开信息化，信息化要服务于现代化； 二是国家统一规划，统一组织； 三是各个领域要广泛应用现代信息技术，开发利用信息资源； 四是信息化是一个不断发展的过程。 4. 国家信息化体系六要素 信息技术应用： 信息资源的开发利用： 信息网络 信息技术和产业 信息化人才 信息化政策法规和标准化规范 5. 企业信息化 定义： 指挖掘先进的管理理念，应用先进的计算机网络技术去整合企业现有的生产、经营、设计、制造、管理，及时的为企业的“三层决策”提供准确有效的数据信息，以便对需求做出迅速的反应，奇本质是加强企业的“核心竞争力”。 根本目的： 就是实现企业战略目标与信息系统整体部署的有机结合，这种结合当然是可以从不同的层次或者角度出发来考虑，但这种不同层次和角度的结合能够给企业带来的最终效益是不一样的。IT战略有助于确保IT活动支持总体经营战略，使该组织实现其经营的目标和目的。 企业信息管理系统不是把资源整合起来就可以了，而是需要一个有效的信息资源管理体系，其中最为关键的是从事信息资源管理的人才队伍建设。 其次是架构的问题，在信息资源建设阶段，规划是以建设进程为主线，在信息资源管理阶段，规划应是以架构为主线，主要涉及的是这个信息化运营体系的架构，这个架构要消除以往分散建设所导致的信息孤岛，实现大范围内的信息共享、交换和使用，提升系统效率，达到信息资源的最大增值。 三层体系： 战术层 战略层 决策层 6. 主流的企业信息化系统 企业资源计划（ERP）： 客户关系管理（CRM）： 供应链管理（SCM）： 知识管理系统（ABC）： 企业业务流程重组（BPR）： 7. U/C矩阵U/C矩阵是一张表格，用来表达过程与数据两者之间的关系。U代表Use，表示过程对数据类的使用。C代表Create，表示过程对数据类的产生。 8. 电子商务（EC）是指对整个贸易活动实现电子化。即交易各方通过计算机和通讯网络进行信息的发布、传递、存储、统计，以电子交易方式而不是通过纸介质信息交换或直接面谈方式进行商业交易。 参与电子商务的实体有四类：顾客、商户、银行、认证中心 分为下面三种模式： 企业对消费者B2C（网上商城）； 企业对企业B2B（1688）； 消费者对消费者C2C（咸鱼）； 9. 信息资源管理 定义： 为了确保信息资源的有效利用，以现代信息技术为手段，对信息资源实施计划、预算、组织、指挥、控制、协调的人类管理活动。 主要内容： 信息系统的管理：包括信息系统开发项目、信息系统运行与维护的管理、信息系统评价等。 信息资源开发、利用的标准、规范、法律制度的制定与实施 信息产品与服务的管理 信息资源的安全管理 信息资源管理中的人力资源管理 系统管理综述1. 企业IT管理的三个层次 战略层：IT战略规划。IT战略制定，IT治理，IT投资管理。 战术层：IT系统管理。IT管理流程，组织设计，管理制度，管理工具。 运作层：IT技术及运作管理。IT技术管理，服务支持，日常维护等。 2. 企业IT战略规划 IT战略规划目标的制定要具有战略性； IT战略规划要体现企业核心竞争力要求； IT战略规划目标的制定要具有较强的业务结合性； IT战略规划对信息技术的规划必须具有策略性； IT战略规划对成本的投资分析要有战术性； IT战略规划要对资源的分配和切入时机进行充分的可行性评估。 3. 企业IT系统管理 定义： IT的高效运作和管理，而不是IT战略规划。 核心目标： 管理客户（业务部门）的IT需求；如何有效地利用IT资源恰当地满足业务部门的需求。 基本目标： 全面掌握企业IT环境，方便管理异构网络，从而实现对企业业务的全面管理。 确保企业IT环境的整体可靠性和安全性，及时处理各种异常信息，在出现问题时及时进行修复，保证企业IT环境的整体性能。 确保企业IT环境的整体可靠性和安全性，对涉及安全操作的用户进行全面跟踪和管理；提供 一种客观的手段来评估组织在使用IT方面面临的风险，并确定这些风险释放得到了有效控制。 提高服务水平，加强服务的可管理性并及时产生各类情况报告，及时、可靠的维护各类服务数据。 要求： 企业系统管理应可以让企业实现对所有IT资源统一监控和管理的愿望，应采用一致性的管理模式来推动企业现代化跨平台体系机构的建立； 企业IT系统管理应适合于企业大型、复杂、分布式的环境，不但控制了所有技术资源，而且直接可以从 业务角度出发管理整个企业，管理能力可以延伸到关键的非信息设备。企业可以随时部署应用监控系统，用来规划企业商务目标、维持企业高水平服务，提高业务系统商务响应能力； 企业IT系统管理应可以将整个企业基础结构以一个真实世界化的视图呈现给我们，让不同经验的人理解，让企业集中精力面对自己的业务而非平台之间的差异，这有助于大大提高企业的工作效率； 企业IT系统管理应是全集成的解决方案，覆盖网络资源、性能与能力、事件与安全、软件分布、存储、工作流、帮助台、变更管理和其他的用于传统和分布式计算环境的功能，并可以用于互联网和企业内部网。 关键IT资源： 硬件资源 软件资源（软件+文档） 网络资源（通信线路+网络服务器+网络互联设备等） 数据资源（文件、资料、图表和数据） 通用体系结构： IT部门管理； 业务部门（客户）IT支持 IT基础架构管理 4. 良好的自动化管理工具（系统管理工具）的作用 可以有效的监控操作系统环境、网络环境、数据存储环境、信息安全环境和业务应用环境； 可以准确的定位和综合诊断系统异常的原因并提出修复方案； 可以有力的为业务系统保驾护航，让业务应用高枕无忧从而使企业IT部门可以将更多精力投入在服务和推动业务方面 5. 企业级的系统管理需要考虑因素 符合业界的一些最佳实践标准 应提供集成统一的管理体系； 应包括端到端的可靠性和性能管理能力； 应能够将IT管理与业务优先级紧密的联系起来，从而打破IT部门与业务部门之间的隔阂； 应着重考虑服务水平的管理，从而为用户提供更优的服务。 6. IT服务理念 以客户（企业的业务部门）为中心提供IT服务； 提供高质量、低成本的IT服务； 提供的服务可度量、可计费。 7. 服务级别管理 服务级别管理是定义、协商、订约、检测和评审提供给客户服务质量水准的流程。直接面对的不是IT服务的用户（业务部门内某个具体的职员），而是IT服务付费的客户（某个具体的业务部门）； 主要目标： 根据客户的业务需求和相关的成本预算，制定恰当的服务级别目标，并将其以服务级别协议的形式确定下来。 服务级别协议（SLA） 中确定的服务级别目标，即是IT服务部门监控和评价时机服务品质的标准，也是协调IT部门和业务部门有争议的依据； 服务级别协议设定了IT服务的数量、质量和费用相关标准。SLA不仅用于企业内部IT部门和业务部门之间，也用于企业和第三方服务提供商之间（外包、应用开发服务、系统集成服务）。 8. 服务级别确认流程 9. 服务级别的主要作用 作为IT部门连接业务部门的枢纽，准确了解业务部门的服务需求，节约组织成本，提高IT投资收益； 对服务质量进行量化考核； 监督服务质量； 明确职责，对违反服务级别协议的行为进行惩罚。 10。 服务级别管理的要点 强调IT对业务的价值。1. 在考虑服务级别需求时，要充分考虑业务部门潜在的、隐含的需求，以免因遗漏而影响业务的正常运作；2. 在确定服务级别目标时，要确定合适的服务级别、服务质量。 让业务部门的人员参与进来； 服务级别管理要具体落实。需要更长时间，更复杂、更艰难的监测、评审。 对IT部门来说，至关重要的是创建能够提供的服务级别协议；对业务部门来说，SLA与业务要求相吻合，才有生命力和执行的必要。 IT财务管理1. IT财务管理流程 IT投资预算； IT会计核算； IT服务计费。 2. IT预算三个方面 技术成本（硬件和基础设施）； 服务成本（软件开发与维护、故障处理、帮助台支持）； 组织成本（会议、日常开支）。 3. IT投资预算的目的 是对IT投资项目进行事前规划和控制； 通过预算可以帮助高级管理人员预测IT项目的经济可行性； 可以作为IT服务实施和运作过程中的控制依据； 编制预算要紧密结合IT能力管理。 4. 会计核算 目标： 通过量化IT服务运作过程中所耗费的成本以及收益，为IT服务管理人员提供考核依据和决策信息； 包括的活动： IT服务项目成本核算、投资评价、差异分析和处理。分别实现了对IT项目成本和收益的事中和事后控制； 对成本要素进行定义是IT服务项目成本核算的第一步，成本要素一般可按部门、客户或产品等划分标准进行定义，对于IT服务部门而言，理想的方法是按服务要素结构进行定义； 对于IT项目投资评价的主要指标：投资回报率（ROI）、资本报酬率（ROCE） 为了达到控制的目的，IT会计人员需要将每月、每年的实际数据与相应的预算、计划数据进行比较，发现差异，调查分析差异产生的原因，并对差异进行适当的处理。 IT会计人员需要注意的差异包括：成本差异、收益差异、服务级别差异、工作量差异。 5. IT服务计费 IT服务计费是负责向使用IT服务的部门（客户）收取相应的费用； 通过收费，构建一个内部市场，并以价格机制作为合理配置资源的手段，迫使业务部门有效的控制自身需求、降低总体服务成本，从而提高了IT投资效益； IT服务计费的顺利运作需要以IT会计核算所提供的成本核算数据作为基础。 6. IT部门的职责 IT部门的核心职责在于始终提供并保持高质量的服务； 有效控制不断上升的服务需求成本； 制定出符合业务发展的服务水平协议； 自动制定出能够反应业务动态变化的服务计划。 具体职责包括： IT战略规划 企业应用系统规划 网络及基础设施 数据库管理 安全管理 IT日常运作 终端用户支持 7. IT部门的角色转换 ？？？？？ 成本中心 利润中心 8. IT部门作为独立的利润中心优势 对企业而言，可以是企业集中精力在业务方面，降低成本、提高边际利润； 对于IT部门而言，可称为独立核算的经济实体，通过市场化运作实现自身盈利，对内部人员形成有效激励，更好的利用资源，创造更多社会价值； 对的业务部门而言，在市场需求阶段考虑约束，要考虑成本因素，行为更具经济性，有利于整体效率提升。 9. 系统管理计划 运作方的系统管理规划： 系统日常操作管理， IT人员管理， IT财务管理， 故障管理 性能和能力管理 资源管理 安全管理 用户方的系统管理计划包括： 帮助服务台 用户参与服务级别管理 IT性能和可用性管理 用户参与IT管理 终端用户安全管理 终端用户软件许可协议 10. 运作管理规章制度 与用户相关的IT支持作业方面的规范制度。 如日常作业调度手册、系统备份及恢复手册、性能监控及优化手册、输出管理手册、帮助服务台运作手册、常见故障处理方法、终端用户计算机使用制度。 由IT部门执行的以提供高质量IT服务为目的的管理流程。 如服务级别管理手册、安全管理制度、IT财务管理制度、IT服务计费几成本管理、IT资源及配置管理、新系统转换流程、IT能力规划管理。 11. 系统运作报告内容 系统日常操作日志； 性能能力规划报告； 故障管理报告； 安全审计日志。 12. IT组织的设计原则 IT部门首先应设立清晰的远景目标。 一个简洁清晰的远景是IT管理框架的原动力，描述了IT部门在企业中的位置和贡献。 组织机构调整，清晰部门职责。 根据IT部门的服务内容重点的思考和划分部门职能，进行组织机构调整，清晰部门职责，做到重点业务突出，核心业务专人负责。 建立目标管理制度、项目管理制度。 使整个组织的目标能够落实和分解，建立有利于组织生产的项目管理体制。 建立现代人力资源管理体系。 作为组织机构调整、目标管理制度和项目管理体制的配套工程，建立科学的现代人力资源管理体系，特别是薪酬和考核体系。 通过薪酬和考核体系的建立，促进信息中心的绩效得以提高。 IT组织的柔性化管理，能够较好的适应企业对IT服务的需求变更及技术发展。 13. IT组织设计需要考虑的因素 客户位置，是否需要本地帮助服务台、本地系统管理员或技术支持人员；如果实行远程管理IT服务的话，是否会拉开IT服务人员与客户之间的距离。 IT员工工作地点。不同地点的员工是否存在沟通和协调困难；哪些职能可以集中化；哪些职能应该分散在不同位置（是否为客户安排本地系统管理员）。 IT服务组织的规模。是否所有服务管理职能能够得到足够的支持，对所提供的服务而言这些职能是否都是必要的。 IT基础架构的特性。组织支持单一的还是多厂商架构；为支持不同的硬件和软件，需要哪些专业技能；服务管理职能和角色能否根据单一平台划分。 14. IT组织和岗位职责设计 按IT管理的三个层次：IT战略规划、IT系统管理、IT技术管理及支持来进行IT组织及岗位职责设计。 IT战略及投资管理。 由公司的高层、IT部门的主管及核心管理人员组成，主要职责是制定IT战略规划以及支撑业务发展，对重大IT投资项目予以评估决策。 IT系统管理。 公司整个IT活动的管理，包括：IT财务管理、服务级别管理、IT资源管理、性能及能力管理、系统安全管理、新系统运行切换，从而保证高质量的为业务部门（客户）提供IT服务。 IT技术及运作支持。 IT基础设施的建设及业务部门IT支持服务，包括：IT基础设施建设、IT日常作业管理、帮助服务台管理、故障管理及用户支持、性能和可用性保障。从而保证业务部门（客户）IT服务的可用性和持续性。 15. IT人员的教育与培训 IT部门的人力资源管理是从部门的人力资源规划及考核激励开始的，用于保障企业各IT活动的人员配备。 然而，在做好了IT部门的人力资源规划基础上，更为重要的是建设IT人员教育与培训体系以及为员工制度职业生涯发展规划，让员工与IT部门和企业共同成长。 16. 外包对企业的好处 可以扬长避短，集中精力发展企业的核心业务； 可以为企业节省人员开支； 可以减少企业的人力资源管理成本； 可以使企业获得更为专业，更为全面的热情服务。 17. 第三方外包的管理内容 外包商的选择； 外包合同的管理； 外包的风险控制。 18. 外包成功的关键因素 良好的社会形象和信誉； 相关行业经验丰富； 能够引领或紧跟信息技术发展； 具有良好的技术能力，经营管理能力，发展能力； 加强战术和战略优势，建立长期战略关系； 聚焦于战略思维，流程再造和管理的贸易伙伴关系。 19. 外包商的资格审查 技术能力： 外包商提供的信息技术产品是否具备创新性、开发性、安全性、兼容性，是否拥有较高的市场占有率，能否实现信息数据的共享；外包商是否具有信息技术方面的资格认证，如信息产业部颁发的系统集成商证书、认定的软件厂商证书等；外包商是否了解行业特点，能够拿出真正使适合本企业业务的解决方案；信息系统的设计方案中是否运用了稳定、成熟的信息技术，是否符合行业发展的要求，是否充分体现了以客户为中心的服务理念；是否具备对大型设备的运行、维护、管理经验和多系统整合能力；是否拥有对高新技术深入理解的技术专家和项目管理人员。 经营管理能力： 了解外包商的领导层结构、员工素质、客户数量、社会评价；项目管理水平，如软件工程工具、质量保证体系、成本控制、配置管理方法、管理和技术人员的老化率和流动率；是否具备能够证明其良好运营管理能力的成功案例；员工间是否具备团队合作精神；外包商客户的满意程度。 发展能力： 分析外包服务商以审计的财务报告、年度报告和其他各项财务指标，了解其盈利能力；考察外包企业从事外包业务的时间、市场份额以及波动因素；评价外包服务商的技术费用支出以及在信息技术领域内的产品创新，确定他们在技术方面的投资水平是否能够支持对企业的外包项目。 20. 外包合同管理 关键核心文件：服务等级协议（SLA） 21. 外包类型 根据客户与外包商建立的外包关系，可以将信息技术外包划分为： 市场关系外包：合同相对较短，可以更换外包商； 中间关系外包：维持合理的协议性，直至完成主要任务； 伙伴关系外包：合同反复签订，长期的互利关系。 22.外包风险控制 加强对外包合作的管理。 对于企业IT管理者而言，在签署外包合同之前应该谨慎而细致的考虑到外包合同的方方面面，在项目实施过程中，也要能够积极制定计划和处理随时出现的问题。使得外包合同能够不断适应变化，实现双赢局面。 对整个项目体系的规划。 企业必须对自身的需求和存在的问题非常清楚，从而协调好与外包商长期的合作关系，IT部门也要让员工积极的参与到外包项目中去，企业应该委派代表去参与完成项目。 对新技术敏感。 企业必须尽快掌握出现的新技术，并了解其潜在的应用，企业的IT部门应该注意供应商的技术简介、参加高技术研讨会，并了解组织现在采用的新技术的情况，不断评估组织的软硬件方案，弄清市场上同类产品的发展潜力。 不断学习。 企业IT部门应该在其内部倡导良好的学习氛围，以加快用户对持续变化的IT环境的适应速度。 23. 系统日常操作范围 性能和可用性保障： 减少故障时间，提高工作效率，有效控制成本。 系统作业调度： 统一协调，有利于业务支持。 帮助服务台： 全面用户支持解决方案。 输出管理： 确保适当的信息以适当的格式提供给全企业范围内的适当人员。 故障管理及用户支持。 24. IT在作业管理的问题上面临的两种挑战 支持大量作业的巨型任务，通常会涉及多个系统或应用； 对商业目标变化的快速响应。 25. 系统日常操作手册 作业调度的时间 优先级 帮助服务台的请求 服务流程 性能的监控方法 报告内容 输出管理 26. 操作结果管理及改进内容 操作日志记录了足以形成数据的信息， 并为关键性的运作提供审核追踪记录，通过定期检查系统日志和其他审核跟踪记录来发现非正常操作和未经授权的访问。 进程安排报告用于追踪并衡量任务的完成非正常终止，特殊要求和紧急要求，以保障工作表现符合进程安排任务量中的规定。 利用工具（批处理和实时工具）来主动的监控、测量和报告系统的性能和容量（包括平均响应时间、每日交易数、停电、平均无故障时间、磁盘空间使用、网络性能），并且定期将包含有关性能、容量和可用性的数据的趋势报告提交给IT管理层。 故障报告应包括事故的原因、纠正措施、防范措施、违背服务标准的统计测量情况（处理中的问题、响应速度、问题类型、维修时间），并定期提交IT管理层。 27. 操作人员管理内容 识别系统日常操作的范围； 编写系统日常操作手册； 管理操作结果并予以改进； 加强操作人员的管理。 28. 操作人员管理注意事项 清晰划分IT日常操作管理职能与其他的IT职能； IT日常操作管理职能，应由专职部门执行； IT操作人员完全了解自己的职务内容和职责，并得到了培训； 人手足够； 注意协作，沟通。 29. 身份管理的问题 管理和维护困难； 密码安全策略难以实施； 用户使用不方便； 安全问题发生后，难以追查到责任人。 30. 统一用户管理优点 用户使用更加方便； 安全控制力度得到加强； 减轻管理人员的负担； 安全性得到提高。 31. 企业用户管理的功能 用户账号管理：处理用户信息，统一的用户管理可以仅使用一个接口；用户的密码管理；配套正式流程。 用户权限管理：确定是否允许用户执行所请求操作的流程；用户授权； 企业外部用户管理：账号的分配、撤销权限管理问题； 用户安全审计：安全行为统计监控。 授权通常采用基于角色的访问控制（RBAC）。 32. 用户安全审计方法 利用日志工具来检测和报告较差和易猜的密码； 定期检查和重新认证用户对系统的访问； 利用日志工具检测对网络或关键系统进行的反复的未授权访问； 对于所有系统主动限制、监测和审核超级用户（或系统管理员）的活动。 33. 用户安全管理审计功能 用户安全审计数据的收集，包括：抓取关于用户账号使用情况的数据； 保护用户安全审计数据，包括：使用时间戳、存储的完全性，防止数据的丢失； 用户安全审计数据分析，包括：检查、异常探测、违规分析、入侵分析。 34. 用户管理的方法 现代计算机常用的身份认证方式主要有： 用户密码方式 IC卡认证 动态密码 USB Key认证 35. 用户管理报告 了解系统通常会发生什么； 哪些资源是用户要访问的； 什么时间是访问的高峰时段； 例外情况处理：登录/访问时间地点异常、审核失败等。 36. IT计费管理目的 迫使业务部门有效控制需求，降低TCO； 助于IT财务重点关注不符合成本效益的服务项目。 37. 良好的收费内部核算体系 适当的核算收费政策； 可以准确公平的补偿提供服务所承担的成本； 树立IT服务与业务部门（客户）的态度，确保组织IT投资的回报； 考虑收费核算对IT服务的供应者与服务的使用者两方面的利益。 38. IT核算的目的 优化IT服务供应者与使用者的行为 最大化的实现组织的目标。 39. 计费定价方法 成本法服务价格已提供服务发生的成本为标准成本可以是总成本，包括这叫也可以是边际成本在线，有ID投资水平下，每增加一单位服务，是发生的成本 成本加成定价法：IT服务的价格统一提供服务的成分加成的定价方法，IT服务价格=IT服务成本X（1+X%）； 现行价格法，参考现有组织内部其他各个部门之间或者外部的类似组织服务价格确定； 市场价格法，IT服务的价格按照外部市场供应的价格，确定IT服务的需求者可以与供应商校服价格进行谈判协商； 固定价格法，合同价格法，IT服务的价格是在与客户谈判的基础上由IT部门制定的，一般在一定时期内保持不变。 40. 成本核算最主要的工作 定义成本要素； 成本项目的进一步细分； 对IT部门而言，最理想的方法是按照服务要素结构定义成本要素结构。 资源管理1. COBIT中定义的IT资源 数据。最广泛意义上的对象（外部和内部的）、结构及非结构化的、图像、各类数据； 应用系统。人工处理以及计算机程序的总和； 技术。包括硬件、操作系统、数据库管理系统、网络、多媒体； 设备。包括所拥有的支持信息系统的所有资源； 人员。包括员工技能，意识，以及计划、组织、获取、交付、支持、和监控信息系统及服务的能力。 2. 资产管理的价值 整合IT资产管理及其部署； 资产目录和发现； 资产对账； 软件许可管理； 软硬件的维护、移植和处理； IT财务管理。 3. IT资产管理内容 为所有的内外部资源（台式机、服务器、网络、存储设备）提供广泛的发现和性能分析功能，实现资源的合理使用和重部署； 提供整体软件许口管理（目录和使用），包括更复杂的数据库和分布式应用； 提供合同和厂商管理，可以减少文档工作，如核对发票、控制租赁协议、改进并简化谈判过程。 影响分析、成本分析和财政资产管理（包括ROI报表），为业务环境提供适应性支持，降低操作环境成本。 4. 配置管理 配置管理是专门负责提供IT基础架构的配置及运行情况信息的流程。 配置项：最基本的信息单元，所有软/硬件和各种文档； 配置管理数据库CMDB：IT基础架构中特定组件的配置信息；各配置项相关关系的信息。 5. 配置管理作为一个控制中心，其主要目标表现在四个方面 计算所有IT资产； 为其他IT系统管理流程提供准确信息； 作为故障管理、变更管理和新系统转换的基础； 验证基础架构记录的正确性，并纠正发现的错误。 6. 通过实施配置管理流程，可为客户和服务提供方带来多方面的效益 有效管理IT组件； 提供高质量的IT服务； 更好地遵守法规； 帮助制定财务和费用计划。 7. 软件资源包括 操作系统 中间件 市场上买来的应用 本公司开发的应用 分布式环境软件 服务与计算机应用的软件以及所提供的服务 文档包括 应用表格 合同 手册 操作手册。 8. 企业网络资源 通信线路。企业网络传输介质目前常用的传输介质有双绞线同轴电缆、光纤； 通信服务。企业网络服务器，运行网络操作系统，提供硬盘、文件数据及打印机共享服务功能，是网络控制的核心。目前常见的网络服务器有：Netware、UNIX windows NT； 网络设备。主要有网络传输介质互联设备（T形连接器、调制解调器）、网络物理层互联设备（中继器、集线器）、网络连接层互联设备（网桥、交换器）、应用层互联设备（网关、多协议路由器）； 网络软件。如网络控制软件、网络服务软件。 9. 网络维护管理的五大功能 网络的失效管理， 网络的配置管理， 网络的性能管理， 网络的安全管理， 网络的计费管理。 10. 网络维护管理系统的四个组成要素 若干被管理的代理 至少一个网络维护管理器 一个公共网络维护管理协议； 一种或多种管理信息库。 11. 网络维护管理协议内容 网络维护管理器与被管理代理间的通信方法 规定了管理信息库的存储结构 信息库中关键字的含义以及各种事件的处理方法。 12. 网络管理协议 SNMP：简单网络管理协议； CMIS/CMIP：通用管理信息服务/通用管理信息协议 13. 网络配置管理 涉及网络设备的设置转换收集和修复； 为了便于日常管理，一般采用网络设备配置图与连接图的方式，将整个系统的网络情况绘制成一张网络系统配置连接图； 两种主要的网络配置工具：设备供应商提供的工具和第三方公司提供的工具。 14. 网络管理包含的五部分内容 网络性能管理：衡量及利用网络性能，实现网络性能监控和优化。网络性能变量包括：网络吞吐量、用户的响应次数和线路利用。网络管理员通过对网络、系统产生的报表数据进行实时的分析和管理。 网络设备和应用配置管理：监控网络和系统配额制信息，从而可以跟踪和管理各种版本的硬件和软件元素的网络操作。 网络应用和计费管理：衡量网络利用、个人或小组网络活动，主要负责网络使用规则和账单等。 网络设备和应用故障管理：负责监测、日志、通告用户、自动解决网络问题，以确保网络的高效运行。 安全管理：控制网络资源访问权限，从而不会导致网络遭到破坏。只有被授权的用户才有权访问敏感信息。安全管理主要涉及访问控制或网络资源管理。访问控制管理是指安全性处理过程。即妨碍或促进用户或系统间的通讯，支持各种资源。认证过程，主要包括认证和自主访问控制两个步骤。 15. 网络管理系统包含 探测器Probe（或代理），主要负责收集众多网络节点上的数据； 控制台Console，主要负责集合并分析探测器收集的数据，提取有用信息的报告。 16. 网络审计支持 网络审计不管从审计软件和数据库方面都要利用安全技术，并建立一套安全机制，以保障网络设计的安全，对于安全机制主要包括三个方面： 接入管理：接入管理主要用于处理好身份鉴别（身份真伪和权限）和接入控制，以控制信息资源的使用； 安全建设：主要功能有安全报警设置、安全报警报告以及检查跟踪； 安全恢复： 主要是及时恢复因网络故障而丢失的信息。 对于安全技术而言，主要可以使用防火墙、数据认证、数据加密技术；还可以将不断发展的新型安全技术应用于网络审计中，如将隧道技术应用于虚拟专用网（VPN）。 安全管理1. 信息安全基本要素 保密性：确保信息不暴露给未授权的实体，包括最小授权原则（只赋给使用者恰好够用的权限，防止其看到其他保密的数据）、防暴露（将物理数据库文件名和扩展名都修改为一串乱码，防止他人轻易找到复制）、信息加密、物理保密。 完整性：保证数据传输过程中是正确无误的，接收和发送的数据相同，包括安全协议教、校验码、密码校验、数字签名，公证等手段。 可用性：保证合法的用户能以合法的手段来访问数据，包括综合保障（IP过滤、业务流控制、路由选择控制、审计跟踪）。 可控性：控制授权范围内的信息流向及行为方式，整个网络处于可控状态下。 不可抵赖性： 信息数据参与者不能否认自己发送的数据，参与者身份真实有效。 2. 安全保护五个等级 用户自主保护级（第一级）：对用户实施访问控制，使用护自己具备自主的安全保护能力。 系统审计保护级（第二级）：审计跟踪日志，通过登录规程、审计与安全性相关的事件和隔离资源，使用户对自己的行为负责。 安全标记保护级（第三级）：指定安全标记，提供有安全策略模型、数据标记，以及主体对客观体强制访问控制的非形式化描述；具有准确的标记输出信息的能力。 结构化保护级（第四级）：将安全保护机制划分为关键部分和非关键部分。加强了鉴别机制，支持系统管理员和操作员的职能，提供可信设施管理，增强了配置管理控制。 访问验证保护级（第五级）：增加了访问验证功能。 3. 信息系统的安全保障措施 安全策略：用于描述一个组织高层的安全目标，确定组织安全策略是一个组织实现安全管理和技术措施的前提。 安全组织： 安全组织作为安全工作的管理、实施和运行维护体系，主要负责安全策略、制度、规划的制定和实施等。 安全人员： 人是信息安全的核心，信息的建立和使用者都是人，不同级别的保障能力级别的信息系统对人员的可信度要求也不一样。 安全技术： 是信息系统里面部署的各类安全产品，属于技术类安全控制措施，不同保障能力级别的信息系统应选择具备不同安全保障能力级别的安全技术与产品。 安全运作：包括生命周期中各个安全环节的要求，包括安全服务的响应时间、安全工程的质量保证、安全培训力度。 4. 灾难恢复措施 灾难预防措施，做灾难恢复备份，自动备份系统的重要信息。 灾难演习制度，每过一段时间进行一次灾难演习，以熟练灾难恢复的操作过程。 灾难恢复，使用最近的一次备份进行灾难恢复，可分为两类：全盘恢复和个别文件恢复。 5. 备份策略 完全备份，可将指定目录下载，所有数据都备份在磁盘或磁带中，占用比较大的磁盘空间。 增量备份，仅对上一次备份（任意备份策略）后的数据的变动进行备份。 差异备份，仅对上一次完全备份后的数据变动进行备份。 6. 风险管理 项目风险是可能导致项目背离既定计划的不确定事件、不利事件和弱点。 项目的风险管理包括：风险识别、风险分析（评估）、风险管理。 风险管理是指识别、评估、降低风险到可以接受的程度，并实施适当机制控制风险，保持在此程度之内的过程。 风险评估的目的是确定信息系统的安全保护等级以及信息系统在现有条件下的安全保障能力级别，进而确定信息系统的安全保护需求。 风险管理则根据风险评估的结果，从管理（包括策略与组织）、技术、运行，三个层面采取相应的安全控制措施，提高信息系统的安全保障能力级别，使得信息系统的安全保障能力级别高于或者等于信息系统的安全保护等级。 7. 项目的风险管理内容 一个风险管理计划，至少应强调主要的项目风险（财务、进度、组织、业务调整）、潜在的风险影响、风险管理的可能的解决方案，降低风险的措施。 一个风险预防计划和应急计划，包括降低风险所必需的资源、时间和成本概算。 一各在整个项目周期内自始至终对风险进行测定、跟踪及报告的程序。 应急费用，并将其列入预算。 8. 控制风险 降低风险：降低风险发生的可能性及影响与安装防护措施； 避免风险：通过一定手段和措施避免风险的发生，如修改项目计划，放宽时间； 转嫁风险，将风险转接到第三方，如购买保险； 接受风险：高风险带来高收益，基于投入/产出的综合考虑。 9. 物理安全是信息安全的最基本保障，主要包括： 环境安全； 设施和设备安全； 介质安全。 10. 健全的环境安全管理包括： 专门用来放置计算机设备的设施或房间； 对IT资产的恰当的环境保护，包括计算机设备、通信设备、个人计算机、局域网设备； 有效的环境控制机制，包括火灾探测和灭火系统、湿度控制系统、双层地板、隐藏的线路铺设、安全设置水管位置（远离敏感设备）、不间断电源和后备点力供应； 定期对计算机设备周边环境进行检查； 定期对环境保护措施进行测试； 定期接受消防管理部门的检查； 对检查中发现的问题进行处理的流程。 11. 设施和设备安全 设备的管理包括：购置、使用、维修和存储管理4个方面。 设备安全包括：防盗、防毁、防电磁信息辐射泄漏、防止线路截获、抗电磁干扰及电源保护。 采购装备安全设备时，应遵循的原则： 严禁采购和使用未经国家信息安全测评机构认可的其他信息安全产品； 尽量采用我国自主开发研制的信息安全技术和设备； 严禁直接采用境外密码设备； 必须采用境外信息安全产品时，该产品必须通过国家信息安全评测机构的认可； 严禁使用未经国家密码管理部门批准和未经国家信息安全质量认证的国内密码设备。 12. IDS入侵检测系统 IDS是实时监测和防止黑客入侵系统及网络资源的检测系统。主要包括： 监控中心； 基于网络的入侵检测器； 基于主机的入侵检测器； 人为漏洞检测器（误用检测）。 13. 介质安全 包括介质数据的安全及其本身的安全。常见的不安全情况： 损坏：自然灾害（地震、火灾、洪灾）、物理破坏（硬盘损坏、设备使用寿命到期、外力破损）、设备故障（停电断电、电磁干扰）。 泄漏；电子辐射（侦听微机操作过程）、乘机而入（合法用户进入安全进程后中途离开）、痕迹泄露（密码、密钥保密不善，被非法用户获得）。 意外失误：操作失误，意外疏漏，采取应付突发事件的计划来指导工作。 14. 容错方法 使用空闲备件：配置一个备用部件，平时处于空闲状态，当原部件出现错误时则取代原来部件的功能。 负载均衡：使两个部件共同承担一个任务，当其中的一个出现故障时，另一个就承担两个部件的全部负载。 镜像：两个部件执行完全相同的工作，当其中一个出现故障时，另一个则继续工作。 复现：也称为延迟镜像，即辅助系统从原系统接受数据时存在着延迟，原系统出现故障时，辅助系统就接替原系统的工作，但也相应存在着延时。 热可更换：某一部件出现故障时，可以立即拆除该部件并替换上一个好的部件，这样就不会导致系统瘫痪。 15. 信息系统的安全保障措施 健全的管理措施：建立健全的安全事件管理机构，明确人员的分工和责任。 灾难恢复措施：在系统正常运行时，就通过各种备份措施为灾害和故障做准备。 备份策略： 制定安全事件响应与处理计划及事件处理过程示意图，以便迅速恢复被破坏的系统。 16. 系统安全性保护措施 物理安全控制。物理安全控制是指为保证系统各种设备和环境设施的安全而采取的措施。 人员及管理控制。主要指用户合法身份的确认和检验，用户合法身份检验是防止有意或无意的非法进入系统的最常用的措施。 存取控制。通过用户鉴别，获得使用计算机权的用户，应根据预先定义好的用户权限进行存取，称为存取控制。 数据加密。 数据加密由加密（编码）和解密（解码）两部分组成。加密是将明文信息进行编码，使它转换成一种不可理解的内容，这种不可理解的内容成为密文。解密是加密的逆过程，即将密文还原成原来可以理解的形式。 17. 数据安全措施 数据库安全； 终端识别； 文件备份； 访问控制。 18. 访问控制 是指防止对计算机及计算机系统进行非授权访问的存取，主要采用两种方式实现： 限制访问系统的人员； 限制进入系统的用户所能做的操作。 前者通过用户识别与验证来实现，后者依靠存取控制实现。访问控制手段包括：用户识别代码、密码、登录控制、资源授权（用户配置文件、资源配置文件、控制列表）、授权核查、日志和审计。 访问控制主要包括六种类型： 防御型控制用于阻止不良事件的发生； 探测性控制用于探测已经发生的不良事件； 矫正型控制用于矫正已经发生的不良事件； 管理型控制用于管理系统的开发、维护和使用，针对系统的策略、规程、行为规范、个人的角色和义务、个人职能和人事安全决策。 技术型控制适用于为信息技术系统和应用提供自动保护的硬件和软件控制手段； 操作型控制是用于保护操作系统应用的日常规程和机制。 访问控制的手段可分为三个层次：物理类、管理类、技术类控制手段，每个层次又可分为防御型和探测型。 访问控制的手段分类说明 防御型控制 物理类控制手段 管理类控制手段 技术类控制手段 文书备份 安全知识培训 访问控制软件 围墙和栅栏 职务分离 防病毒软件 保安 职员雇佣手续 库代码控制系统 证件识别系统 职员离职手续 口令 加锁的门 监督管理 智能卡 双供电系统 灾难恢复和应急计划 加密 生物识别型门禁系统 计算机使用的登记 拨号访问控制和回叫系统 工作场所的选择 灭火系统 探测型控制 物理类控制手段 管理类控制手段 技术类控制手段 移动监测探头 安全评估和审计 日志审计 烟感和温感探头 性能评估 入侵探测系统 闭路监控 职务轮换 传感和报警系统 背景调查 19. 运行管理： 出入管理：根据安全总局和涉密范围进行分区控制；对机房和区域的进出口进行严格控制。 终端管理：目的是增强对终端用户管理的有效性；提高终端用户的满意度；降低系统运营管理成本；提升企业竞争力。终端管理包括 3 个模块：事件管理、配置管理、软件分发。 信息管理： 对信息提供信息分类和信息控制，将所有的抽象的信息记录下来并存档。 20. 防犯罪管理 主要威胁： 在已授权的情况下，对网络设备及信息资源进行非正常使用或越权使用； 利用各种假冒或欺骗的手段，非法获取合法用户的使用权限； 使用非法手段篡改计算机系统的数据或程序； 改变系统的正常运行方法，减慢系统的响应时间，甚至于破坏计算机系统线路窃听。 21. 禁止使用国外密码算法和安全产品 国家明确规定严格禁止直接使用国外的密码算法和安全产品，这主要有两个原因： 一是国外禁止出口密码算法和产品，所谓出口的安全的密码算法，国外都有破译手段； 二是恐怕国外的算法或产品中存在“后门”，关键时刻危害我国安全。 22. 网络安全产品 WEB应用防火墙； 入侵检测系统； 防病毒软件； 备份/恢复技术。 性能和能力管理系统维护、运行和评价","link":"/2024/05/13/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%B7%A5%E7%A8%8B%E5%B8%88%E4%B8%BB%E8%A7%82%E9%A2%98%E8%80%83%E7%82%B9/"},{"title":"安装Jellyfin多媒体服务器","text":"由于 Jellyfin 的 GPL 协议和 Intel 的 media-driver (iHD) Linux 驱动（部分开源）在协议上不兼容的缘故，Jellyfin 官方的 Docker 镜像：jellyfin/jellyfin 并不包含 Intel Linux 核显驱动。但是 Intel 的 QuickSync QSV 硬件加速依赖于该驱动，并且 Intel 10 代酷睿（Comet Lake）以及更新的处理器需要该驱动才能正常使用硬件加速。另外 VPP/OpenCL 色调映射也需要该驱动才能正常运作。 1 安装开发者提供的中国特供版镜像Docker 镜像： docker pull nyanmisaka/jellyfin:latest Jellyfin中国特供版+Docker镜像，含驱动，免折腾开箱即用 12345678910111213141516sudo docker run -d --name=Jellyfin -p 8096:8096 \\ # --name=Jellyfin 将容器名定义为 Jellyfin -p 8920:8920 -p 7359:7359/udp -p 1900:1900/udp #这三个端口为可选项 \\ -v /var/docker/jellyfin/library:/config -v /var/docker/jellyfin/cache:/cache -v /data/media:/media \\ -e TZ=Asia/Shanghai -e PUID=0 -e PGID=0 \\ #将容器的时区设为上海,使用窗口在运行时使用root权限 --device=/dev/dri:/dev/dri \\ #直通显卡给 Docker 容器，用于硬解 --add-host=api.themoviedb.org:13.224.161.90 \\ #为容器增加 host 指向，加速海报与影视元数据的搜刮 --add-host=api.themoviedb.org:13.35.8.65 \\ --add-host=api.themoviedb.org:13.35.8.93 \\ --add-host=api.themoviedb.org:13.35.8.6 \\ --add-host=api.themoviedb.org:13.35.8.54 \\ --add-host=image.tmdb.org:138.199.37.230 \\ --add-host=image.tmdb.org:108.138.246.49 \\ --add-host=api.thetvdb.org:13.225.89.239 \\ --add-host=api.thetvdb.org:192.241.234.54 \\ --restart unless-stopped \\ jellyfin/jellyfin:latest 1.如果使用 linuxserver/jellyfin 镜像，就把最后一行替换为下行 1lscr.io/linuxserver/jellyfin:latest 2.如果使用 nyanmisaka/jellyfin 镜像，最把最后一行替换为下行 1nyanmisaka/jellyfin:latest –add-host是指定容器中的域名解析ip，因为每个地方、不同时间ip访问稳定性不同，所以最好不在这里指定，而是用bind解析，详见 安装Bind9用于本地域名解析。已经添加了--add-host参数想删掉的话，可以进入容器配置目录，编辑hostconfig.json文件，把ExtraHosts值清空： 1&quot;ExtraHosts&quot;:[], 修改容器配置需要先停掉容器，容器配置目录默认位于/var/lib/docker/containers/,里面目录是容器的全id，查询容器的全ID使用命令docker inspect 容器ID |grep Id。 端口说明： 端口号 用途 可选项 8096 默认http端口号 必须 8920 默认https端口号 可选 7359 让同一局域网中的客户端设备自动发现 可选 1900 DLNA的端口 可选 2 升级拉取最新版镜像： 1docker pull nyanmisaka/jellyfin:latest 重命名原容器名 1docker rename Jellyfin Jellyfin-10.8.13 用最新镜像重新启动一个容器 1docker run -d --name=Jellyfin -p 8096:8096 -p 8920:8920 -p 7359:7359/udp -p 1900:1900/udp -v /var/docker/jellyfin/library:/config -v /var/docker/jellyfin/cache:/cache -v /data/media:/media -e TZ=Asia/Shanghai -e PUID=0 -e PGID=0 --device=/dev/dri:/dev/dri --restart unless-stopped nyanmisaka/jellyfin:latest 删除原来的容器： 1docker rm Jellyfin-10.8.13 清理冗余镜像： 1docker image prune","link":"/2023/08/06/Nas/jellyfin/"},{"title":"安装可道云Kodexplorer","text":"可道云Kodexplorer是一个基于web的文件管理器，这里可以查看官方文档。 nginx配置文件12345678910111213141516171819202122server { listen 620 default_server; listen [::]:620 default_server; root /var/www/kodexplorer; index index.php server_name www.redtux.cn; location / { try_files $uri $uri/ =404; } location ~ \\.php$ { include snippets/fastcgi-php.conf; fastcgi_pass unix:/var/run/php/php8.1-fpm.sock; # fastcgi_pass 127.0.0.1:9000; } location ~ /\\.ht { deny all; }} php库缺失 curlphp库缺失 mb_string须开启php GD库,否则验证码、缩略图使用将不正常 配置优化 修改nginx的配置文件 12345678client_max_body_size 500M; client_header_timeout 3600s;client_body_timeout 3600s;fastcgi_connect_timeout 3600s;fastcgi_send_timeout 3600s;fastcgi_read_timeout 3600s;# 其他webserver相应修改类似限制;如apache需要修改LimitRequestBody# 修改完成重启nginx生效: service nginx reload 修改php配置文件php.ini; 12345678910111213141516post_max_size = 500M;upload_max_filesize = 500M;memory_limit = 500M;max_execution_time = 3600;max_input_time = 3600;# php中设置set_time_limit无效(safe_mode=on时php代码中修改超时无效) php.inisafe_mode = off# php-fpm.conf 配置优化(超时时间; 4G内存推荐如下子进程配置)request_terminate_timeout 3600pm.max_children = 50pm.start_servers = 10pm.min_spare_servers = 10pm.max_spare_servers = 30pm.max_requests = 500 注意: 如果某一类例如exe文件不能上传,其他文件可上传, 一般是服务器(杀毒软件或防火墙)做了拦截误判,取消相应软件上拦截即可; 超时时间设置; 如果经常有超大文件上传,php和nginx超时时间需要设置大一些; 分片上传: 一个大文件切分成多个分片上传,所有片上传完成后服务器自动合并;一个分片上传失败只需要重传该分片即可; 分片大小设置: 管理员登陆后台–基础设置–上传下载; 调整上传分片大小; 必须小于php.ini和nginx的限制; 修改了php或nginx配置文件后,需要重启php-fpm和nginx; 上传文件限制及超时时间可以根据自己需求设置; 超时时间需大于文件上传下载的时间,否则超时会导致操作失败; 修改可道云配置 设置方法：管理员登陆可道云进入后台 系统设置—基础设置—上传/下载 设置分片大小: 推荐5M 大文件上传时切分成片进行并发上传,从而实现加速和断点续传,推荐5M; 此值必须小于下述配置;否则会引起上传异常(上传失败,进度回退)php.ini: post_max_size, upload_max_filesize ==&gt; 5Mnginx: client_max_body_size ==&gt; 5M; 上传并发数量; 推荐15个并发; nginx + php-fpm上传优化 在nginx.conf中添加如下代码，参考更多nginx优化 1234#使用共享内存做临时存贮提高上传速度，共享内存需要大一些，否则上传大文件内存不足client_body_in_file_only clean;client_body_temp_path /dev/shm 1 2;fastcgi_param REQUEST_BODY_FILE $request_body_file;","link":"/2023/08/05/Nas/kodexplorer/"},{"title":"替代群晖音乐的工具：Navidrome","text":"Linux下的安装首先安装依赖，navidrome依赖ffmpeg： 123sudo apt updatesudo apt upgradesudo apt install vim ffmpeg 然后创建navidrome工作的目录结构： 12sudo install -d -o &lt;user&gt; -g &lt;group&gt; /opt/navidromesudo install -d -o &lt;user&gt; -g &lt;group&gt; /var/lib/navidrome 下载Navidrome 从GitHub下载最新发布版本（用最新版的下载地址替换下面命令中的地址），解压到程序目录/opt/navidrome，赋予目录可执行权限。 123wget https://github.com/navidrome/navidrome/releases/download/v0.XX.0/navidrome_0.XX.0_Linux_x86_64.tar.gz -O Navidrome.tar.gzsudo tar -xvzf Navidrome.tar.gz -C /opt/navidrome/sudo chown -R &lt;user&gt;:&lt;group&gt; /opt/navidrome 创建配置文件In the working directory, /var/lib/navidrome create a new file named navidrome.toml with the following settings. MusicFolder = ““For additional configuration options see the configuration options page. 12345678910LogLevel = 'DEBUG'ScanSchedule = '@every 24h'TranscodingCacheSize = '150MiB'MusicFolder = '/mnt/music'Port = '6019'DefaultLanguage = 'zh-Hans'EnableSharing = trueEnableTranscodingConfig = trueLastFM.Language = 'zh-Hans'UIWelcomeMessage = 'Redtuxs Family Music Server' 创建系统服务配置文件Create a new file under /etc/systemd/system/ named navidrome.service with the following data. Make sure you replace and with the user and group you want to run Navidrome under. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647[Unit]Description=Navidrome Music Server and Streamer compatible with Subsonic/AirsonicAfter=remote-fs.target network.targetAssertPathExists=/var/lib/navidrome[Install]WantedBy=multi-user.target[Service]User=&lt;user&gt;Group=&lt;group&gt;Type=simpleExecStart=/opt/navidrome/navidrome --configfile &quot;/var/lib/navidrome/navidrome.toml&quot;WorkingDirectory=/var/lib/navidromeTimeoutStopSec=20KillMode=processRestart=on-failure# See https://www.freedesktop.org/software/systemd/man/systemd.exec.htmlDevicePolicy=closedNoNewPrivileges=yesPrivateTmp=yesPrivateUsers=yesProtectControlGroups=yesProtectKernelModules=yesProtectKernelTunables=yesRestrictAddressFamilies=AF_UNIX AF_INET AF_INET6RestrictNamespaces=yesRestrictRealtime=yesSystemCallFilter=~@clock @debug @module @mount @obsolete @reboot @setuid @swapReadWritePaths=/var/lib/navidrome# You can uncomment the following line if you're not using the jukebox This# will prevent navidrome from accessing any real (physical) devices#PrivateDevices=yes# You can change the following line to `strict` instead of `full` if you don't# want navidrome to be able to write anything on your filesystem outside of# /var/lib/navidrome.ProtectSystem=full# You can uncomment the following line if you don't have any media in /home/*.# This will prevent navidrome from ever reading/writing anything there.#ProtectHome=true# You can customize some Navidrome config options by setting environment variables here. Ex:#Environment=ND_BASEURL=&quot;/navidrome&quot; 启动Navidrome服务Reload the service daemon, start the newly create service, and verify it has started correctly. 1234sudo systemctl daemon-reloadsudo systemctl start navidrome.servicesudo systemctl status navidrome.servicesudo systemctl restart navidrome.service 如果服务成功启动，你就可以访问http://localhost:4533来访问web端. 让Navidrome随系统启动1sudo systemctl enable navidrome.service 用Nginx配置反向代理反向代理配置文件 1234567891011121314151617181920212223242526272829303132333435363738394041server { listen 619 default_server; listen [::]:619 default_server; # SSL configuration # # listen 443 ssl default_server; # listen [::]:443 ssl default_server; # # Note: You should disable gzip for SSL traffic. # See: https://bugs.debian.org/773332 # # Read up on ssl_ciphers to ensure a secure configuration. # See: https://bugs.debian.org/765782 # # Self signed certs generated by the ssl-cert package # Don't use them in a production server! # # include snippets/snakeoil.conf; #root /var/www/start; # Add index.php to the list if you are using PHP #index index.html index.htm index.nginx-debian.html; server_name www.redtux.cn; client_max_body_size 50000M; location / { proxy_pass http://192.168.0.6:6019; proxy_set_header Host $http_host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header X-Forwarded-Proto $scheme; proxy_set_header X-Forwarded-Protocol $scheme; proxy_set_header X-Forwarded-Host $http_host; proxy_buffering off; }} 也可以Docker的方式安装，详见官方文档Navidrome官方网站 – 开源音乐服务器，自建云端音乐播放器 客户端Android手机可以从F-Droid直接安装Subtracks或者Ultrasonic，然后设置服务器地址就可以了。 PC可以使用Sonixd客户端，下载地址，下载对应系统的版本。 号外其实还有一个自建音乐流媒体服务器koel——基于php fpm docker界面漂亮，唯一缺点就是手机客户端只能从Google play下载，国内只能用浏览器访问。","link":"/2023/08/05/Nas/navidrome/"},{"title":"自建Nextcloud私有云盘","text":"安装从Nextcloud官方网站下载server的安装包，复制到/var/www目录解压。 详细安装过程参考官方文档 1、按照官方文档安装完善php模块必须要安装的模块 PHP (see System requirements for a list of supported versions) PHP module ctype PHP module curl PHP module dom PHP module fileinfo (included with PHP) PHP module filter (only on Mageia and FreeBSD) PHP module GD PHP module hash (only on FreeBSD) PHP module JSON (included with PHP &gt;= 8.0) PHP module libxml (Linux package libxml2 must be &gt;=2.7.0) PHP module mbstring PHP module openssl (included with PHP &gt;= 8.0) PHP module posix PHP module session PHP module SimpleXML PHP module XMLReader PHP module XMLWriter PHP module zip PHP module zlib 选择合适的数据库模块： PHP module pdo_sqlite (&gt;= 3, usually not recommended for performance reasons) PHP module pdo_mysql (MySQL/MariaDB) PHP module pdo_pgsql (PostgreSQL) 推荐安装的模块： PHP module bz2 (recommended, required for extraction of apps) PHP module intl (increases language translation performance and fixes sorting of non-ASCII characters) 2、Apache配置文件新增配置文件vim /etc/apache2/sites-available/nextcloud.conf，复制以下内容： 1234567891011121314&lt;VirtualHost *:80&gt; DocumentRoot /var/www/nextcloud/ ServerName your.server.com &lt;Directory /var/www/nextcloud/&gt; Require all granted AllowOverride All Options FollowSymLinks MultiViews &lt;IfModule mod_dav.c&gt; Dav off &lt;/IfModule&gt; &lt;/Directory&gt;&lt;/VirtualHost&gt; 保存，然后运行： 1a2ensite nextcloud.conf 启用必要的Apache模块： 123456a2enmod rewritea2enmod headersa2enmod enva2enmod dira2enmod mime If you’re running mod_fcgi instead of the standard mod_php also enable: 1a2enmod setenvif 最后重启Apache： 1service apache2 restart 现在就可以访问http://your.server.com安装Nextcloud。 Redis缓存配置修改配置文件nextcloud/config/config.php： Small/Private home serverOnly use APCu: 1'memcache.local' =&gt; '\\OC\\Memcache\\APCu', Organizations with single-serverUse Redis for everything except local memcache: 1234567'memcache.local' =&gt; '\\OC\\Memcache\\APCu','memcache.distributed' =&gt; '\\OC\\Memcache\\Redis','memcache.locking' =&gt; '\\OC\\Memcache\\Redis','redis' =&gt; [ 'host' =&gt; 'localhost', 'port' =&gt; 6379,], Organizations with clustered setupsUse APCu for local cache and either Redis cluster …: 123456789'memcache.local' =&gt; '\\OC\\Memcache\\APCu','memcache.distributed' =&gt; '\\OC\\Memcache\\Redis','memcache.locking' =&gt; '\\OC\\Memcache\\Redis','redis.cluster' =&gt; [ 'seeds' =&gt; [ // provide some/all of the cluster servers to bootstrap discovery, port required 'cache-cluster:7000', 'cache-cluster:7001', ], ] APCu is disabled by default on CLI which could cause issues with nextcloud’s cron jobs. Please make sure you set the apc.enable_cli to 1 on your php.ini config file or append --define apc.enable_cli=1 to the cron job call. 1vim /etc/php/8.1/cli/php.ini 在末尾添加apc.enable_cli=1，否则当你运行occ命令的时候也会提示你APCu不可用。 OCC命令的使用直接运行occ命令，不带任何选项，就会列出occ命令的所有可用的选项和用法： 1sudo -u www-data php8.1 /var/www/nextcloud/occ 返回信息： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207Nextcloud 24.0.12Usage: command [options] [arguments]Options: -h, --help Display this help message -q, --quiet Do not output any message -V, --version Display this application version --ansi Force ANSI output --no-ansi Disable ANSI output -n, --no-interaction Do not ask any interactive question --no-warnings Skip global warnings, show command output only -v|vv|vvv, --verbose Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debugAvailable commands: check check dependencies of the server environment help Display help for a command list List commands status show some status information upgrade run upgrade routines after installation of a new release. The release has to be installed before. activity activity:send-mails Sends the activity notification mails app app:check-code check code to be compliant app:disable disable an app app:enable enable an app app:getpath Get an absolute path to the app directory app:install install an app app:list List all available apps app:remove remove an app app:update update an app or all apps background background:ajax Use ajax to run background jobs background:cron Use cron to run background jobs background:webcron Use webcron to run background jobs background-job background-job:execute Execute a single background job manually broadcast broadcast:test test the SSE broadcaster circles circles:check Checking your configuration circles:maintenance Clean stuff, keeps the app running circles:manage:config edit config/type of a Circle circles:manage:create create a new circle circles:manage:destroy destroy a circle by its ID circles:manage:details get details about a circle by its ID circles:manage:edit edit displayName or description of a Circle circles:manage:join emulate a user joining a Circle circles:manage:leave simulate a user joining a Circle circles:manage:list listing current circles circles:manage:setting edit setting for a Circle circles:members:add Add a member to a Circle circles:members:details get details about a member by its ID circles:members:level Change the level of a member from a Circle circles:members:list listing Members from a Circle circles:members:remove remove a member from a circle circles:members:search Change the level of a member from a Circle circles:memberships index and display memberships for local and federated users circles:remote remote features circles:shares:files listing shares files circles:sync Sync Circles and Members circles:test testing some features config config:app:delete Delete an app config value config:app:get Get an app config value config:app:set Set an app config value config:import Import a list of configs config:list List all configs config:system:delete Delete a system config value config:system:get Get a system config value config:system:set Set a system config value dav dav:create-addressbook Create a dav addressbook dav:create-calendar Create a dav calendar dav:delete-calendar Delete a dav calendar dav:list-calendars List all calendars of a user dav:move-calendar Move a calendar from an user to another dav:remove-invalid-shares Remove invalid dav shares dav:retention:clean-up dav:send-event-reminders Sends event reminders dav:sync-birthday-calendar Synchronizes the birthday calendar dav:sync-system-addressbook Synchronizes users to the system addressbook db db:add-missing-columns Add missing optional columns to the database tables db:add-missing-indices Add missing indices to the database tables db:add-missing-primary-keys Add missing primary keys to the database tables db:convert-filecache-bigint Convert the ID columns of the filecache to BigInt db:convert-mysql-charset Convert charset of MySQL/MariaDB to use utf8mb4 db:convert-type Convert the Nextcloud database to the newly configured one encryption encryption:change-key-storage-root Change key storage root encryption:decrypt-all Disable server-side encryption and decrypt all files encryption:disable Disable encryption encryption:enable Enable encryption encryption:encrypt-all Encrypt all files for all users encryption:list-modules List all available encryption modules encryption:migrate-key-storage-format Migrate the format of the keystorage to a newer format encryption:set-default-module Set the encryption default module encryption:show-key-storage-root Show current key storage root encryption:status Lists the current status of encryption federation federation:sync-addressbooks Synchronizes addressbooks of all federated clouds files files:cleanup cleanup filecache files:recommendations:recommend files:repair-tree Try and repair malformed filesystem tree structures files:scan rescan filesystem files:scan-app-data rescan the AppData folder files:transfer-ownership All files and folders are moved to another user - outgoing shares and incoming user file shares (optionally) are moved as well. files_external files_external:applicable Manage applicable users and groups for a mount files_external:backends Show available authentication and storage backends files_external:config Manage backend configuration for a mount files_external:create Create a new mount configuration files_external:delete Delete an external mount files_external:export Export mount configurations files_external:import Import mount configurations files_external:list List configured admin or personal mounts files_external:notify Listen for active update notifications for a configured external mount files_external:option Manage mount options for a mount files_external:verify Verify mount configuration group group:add Add a group group:adduser add a user to a group group:delete Remove a group group:info Show information about a group group:list list configured groups group:removeuser remove a user from a group integrity integrity:check-app Check integrity of an app using a signature. integrity:check-core Check integrity of core code using a signature. integrity:sign-app Signs an app using a private key. integrity:sign-core Sign core using a private key. l10n l10n:createjs Create javascript translation files for a given app log log:file manipulate logging backend log:manage manage logging configuration log:tail Tail the nextcloud logfile log:watch Watch the nextcloud logfile maintenance maintenance:data-fingerprint update the systems data-fingerprint after a backup is restored maintenance:mimetype:update-db Update database mimetypes and update filecache maintenance:mimetype:update-js Update mimetypelist.js maintenance:mode set maintenance mode maintenance:repair repair this installation maintenance:repair-share-owner repair invalid share-owner entries in the database maintenance:theme:update Apply custom theme changes maintenance:update:htaccess Updates the .htaccess file notification notification:generate Generate a notification for the given user notification:test-push Generate a notification for the given user preview preview:repair distributes the existing previews into subfolders preview:reset-rendered-texts Deletes all generated avatars and previews of text and md files security security:bruteforce:reset resets bruteforce attemps for given IP address security:certificates list trusted certificates security:certificates:import import trusted certificate in PEM format security:certificates:remove remove trusted certificate serverinfo serverinfo:update-storage-statistics Triggers an update of the counts related to storages used in serverinfo sharing sharing:cleanup-remote-storages Cleanup shared storage entries that have no matching entry in the shares_external table sharing:expiration-notification Notify share initiators when a share will expire the next day. support support:report Generate a system report tag tag:add Add new tag tag:delete delete a tag tag:edit edit tag attributes tag:list list tags text text:reset Reset a text document theming theming:config Set theming app config values trashbin trashbin:cleanup Remove deleted files trashbin:expire Expires the users trashbin trashbin:restore Restore all deleted files trashbin:size Configure the target trashbin size twofactorauth twofactorauth:cleanup Clean up the two-factor user-provider association of an uninstalled/removed provider twofactorauth:disable Disable two-factor authentication for a user twofactorauth:enable Enable two-factor authentication for a user twofactorauth:enforce Enabled/disable enforced two-factor authentication twofactorauth:state Get the two-factor authentication (2FA) state of a user update update:check Check for server and app updates user user:add adds a user user:add-app-password Add app password for the named user user:delete deletes the specified user user:disable disables the specified user user:enable enables the specified user user:info show user info user:lastseen shows when the user was logged in last time user:list list configured users user:report shows how many users have access user:resetpassword Resets the password of the named user user:setting Read and modify user settings versions versions:cleanup Delete versions versions:expire Expires the users file versions workflows workflows:list Lists configured workflows 扫描所有用户文件更新： 1sudo -u www-data php8.1 /var/www/nextcloud/occ files:scan --all 扫描特定用户文件更新： 1sudo -u www-data php8.1 /var/www/nextcloud/occ files:scan username 扫描特定目录文件更新： 1sudo -u www-data php8.1 /var/www/nextcloud/occ files:scan --path=/path/to/scan 后台服务优化后台服务有三种方式：AJAX，Webcron，Cron systemd If systemd is installed on the system, a systemd timer could be an alternative to a cronjob. This approach requires two files: nextcloudcron.service and nextcloudcron.timer. Create these two files in /etc/systemd/system/. nextcloudcron.service should look like this: 1234567[Unit]Description=Nextcloud cron.php job[Service]User=www-dataExecStart=/usr/bin/php -f /var/www/nextcloud/cron.phpKillMode=process Replace the user www-data with the user of your http server and /var/www/nextcloud/cron.php with the location of cron.php in your nextcloud directory. The KillMode=process setting is necessary for external programs that are started by the cron job to keep running after the cron job has finished. Note that the .service unit file does not need an [Install] section. Please check your setup because we recommended it in earlier versions of this admin manual. nextcloudcron.timer should look like this: 12345678910[Unit]Description=Run Nextcloud cron.php every 5 minutes[Timer]OnBootSec=5minOnUnitActiveSec=5minUnit=nextcloudcron.service[Install]WantedBy=timers.target The important parts in the timer-unit are OnBootSec and OnUnitActiveSec. OnBootSec will start the timer 5 minutes after boot, otherwise you would have to start it manually after every boot. OnUnitActiveSec will set a 5 minute timer after the service-unit was last activated. Now all that is left is to start and enable the timer by running this command: 1systemctl enable --now nextcloudcron.timer When the option --now is used with enable, the respective unit will also be started. 客户端下载直接从这里下载https://download.nextcloud.com/desktop/releases/","link":"/2023/08/15/Nas/nextcloud/"},{"title":"删除系统自带的snap","text":"snap list可以查看已经安装的包，默认带的组件是core、lxd、snapd。 删除一个snap包 1sudo snap remove docker 卸载snap 1sudo apt autoremove --purge snapd 这样就会连带snap安装的所有软件全部都卸载掉了。","link":"/2023/08/05/Nas/remove-snap/"},{"title":"自建开源远程桌面工具Rustdesk中继服务器","text":"Rustdesk支持Windows、macOS、Linux、iOS、Android、Web等几乎所有平台，客户端可以在官方网站下载，安装后自动分配id，立即可以使用。但是官方免费的服务器速度有点慢，官方还提供了服务器端程序，我们可以用docker来安装： 1234docker volume create rustdesk_server_datadocker run --name hbbs --net=host -v &quot;rustdesk_server_data:/root&quot; -d rustdesk/rustdesk-server:latest hbbs -r www.redtux.cndocker run --name hbbr --net=host -v &quot;rustdesk_server_data:/root&quot; -d rustdesk/rustdesk-server:latest hbbr 这样自建的中继服务器就已经成功运行了，然后在自己的每个客户端设置中继服务器为自己的ip就可以了。","link":"/2023/08/06/Nas/rustdesk-server/"},{"title":"安装Samba用于本地文件分享","text":"Samba安装 12sudo apt updatesudo apt install samba 配置用户，为用户设置密码 1sudo smbpasswd -a [user] 编辑配置文件 1sudo vi /etc/samba/smb.conf 在配置文件末尾增加一段需要分享的目录设置 12345678[ShareData]comment = share folderpath = /path/dataavailable = yesbrowseable = yeswriteable = yesread only = novalid users = [user] [ShareData]是访问分享文件时显示的分享名称；path指向分享文件的真实路径；[user]为访问分享文件的用户名，跟上面设置密码时的用户名一致；这一段可以重复添加，有几处需要分享就可以添加几次，保证每个分享名称不一样就可以了。 重启Samba服务 1sudo service smbd restart 接下来就可以从局域网其他客户端smb://IP访问分享的文件了。","link":"/2023/08/05/Nas/samba-guide/"},{"title":"Ubuntu的SSH安全配置","text":"查看登录日志文件：1sudo vim /var/log/auth.log 修改SSH的默认端口1iptables -A INPUT -p tcp -m tcp --dport 6022 -j ACCEPT 保存并重启iptables防火墙 12service iptables saveservice iptables restart 修改SSH的默认端口 1sudo vim /etc/ssh/sshd_config 把 # Port 22 修改为 Port 6022 最好使用1024到65535之间的一个别人猜不到的端口号 重启ssh服务 1sudo service sshd restart 或 1sudo /etc/init.d/ssh restart 可以用iptables检查端口是否开启 禁止SSH的root登录修改 /etc/ssh/sshd_config 文件 1PermitRootLogin no 重启ssh服务 1sudo service sshd restart 禁用密码登陆，使用RSA私钥登录12ssh-keygen #在客户端生成密钥ssh-copy-id myserver1 #将公钥添加至服务端 还需要配置服务端 123sudo vim /etc/ssh/sshd_configPasswordAuthentication no #禁止密码认证PermitEmptyPasswords no #禁止空密码用户登录 重启ssh服务 1sudo service sshd restart 使用 Fail2banUbuntu 16.04 系统源里带有 denyhosts ，到了Ubuntu 20.04默认不再包含。DenyHosts现在几乎不再更新了，所以来使用Fail2ban 检查是否安装了特定软件包 12sudo apt list --installed | grep denyhostssudo apt list --installed | grep fail2ban 安装fail2ban1sudo apt-get install fail2ban 配置fail2ban配置文件在 /etc/fail2ban/jail.conf 。 在配置文件的[DEFAULT]区，可以在此定义所有受监控的服务的默认参数 12345678910111213[DEFAULT]# 以空格分隔的列表，可以是 IP 地址、CIDR 前缀或者 DNS 主机名# 用于指定哪些地址可以忽略 fail2ban 防御ignoreip = 127.0.0.1/8 ::1 # 客户端主机被禁止的时长bantime = 60m# 查找失败次数的时长findtime = 10m # 客户端主机被禁止前允许失败的次数 maxretry = 5 根据上述配置，fail2ban会自动禁止在最近10分钟内有超过5次访问尝试失败的任意IP地址。一旦被禁，这个IP地址将会在1小时内一直被禁止访问 SSH 服务 保存配置后重启服务 1sudo service fail2ban restart 查看fail2ban运行状态验证fail2ban成功运行： 12$ sudo fail2ban-client pingServer replied: pong 检验fail2ban状态 1234$ sudo fail2ban-client statusStatus|- Number of jail: 1`- Jail list: sshd 检验一个特定监狱的状态 1sudo fail2ban-client status 上面的命令会显示出被禁止IP地址列表 解锁特定的IP地址 1sudo fail2ban-client set sshd unbanip 192.168.1.8","link":"/2023/08/06/Nas/ubuntu-ssh/"},{"title":"使用Acme.sh工具为Ubuntu安装免费ssl证书","text":"安装acme.sh1curl https://get.acme.sh | sh -s email=my@example.com 或者 1wget -O - https://get.acme.sh | sh -s email=my@example.com 如果上面两个连接不成功，可以用下面国内的源： 123git clone https://gitee.com/neilpang/acme.sh.gitcd acme.sh./acme.sh --install -m my@example.com acme会安装到~/acme.sh目录中，安装完成后重新加载Bash： 1source ~/.bashrc 配置acme.sh开启自动更新： 1acme.sh --upgrade --auto-upgrade 选择默认 CA目前 acme.sh 支持四个正式环境 CA，分别是 Let’s Encrypt、Buypass、ZeroSSL 和 SSL.com，默认使用 ZeroSSL，如果需要更换可以使用如下命令： 切换 Let’s Encrypt 1acme.sh --set-default-ca --server letsencrypt 切换 Buypass 1acme.sh --set-default-ca --server buypass 切换 ZeroSSL 1acme.sh --set-default-ca --server zerossl 切换 SSL.com 1acme.sh --set-default-ca --server ssl.com 切换 Google Public CA 1acme.sh --set-default-ca --server google 使用 DNS 验证签发证书家用网络都封了80端口，不能使用正常模式申请证书，只能使用DNS验证的模式申请，acme.sh 的 DNS API 模式申请证书： 1acme.sh --issue --dns dns_cf -d example.com -d *.example.com acme.sh 支持几十种 DNS 插件，常用的下面几种，： 阿里云 –dns dns_ali 12export Ali_Key=&quot;1234&quot;export Ali_Secret=&quot;sADDsdasdgdsf&quot; Dnspod –dns dns_dp 12export DP_Id=&quot;1234&quot;export DP_Key=&quot;sADDsdasdgdsf&quot; Godaddy –dns dns_gd 12export GD_Key=&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;export GD_Secret=&quot;asdfsdfsfsdfsdfdfsdf&quot; AWS –dns dns_aws 12export AWS_ACCESS_KEY_ID=&quot;sdfsdfsdfljlbjkljlkjsdfoiwje&quot;export AWS_SECRET_ACCESS_KEY=&quot;xxxxxxx&quot; Linode –dns dns_linode 1export LINODE_API_KEY=&quot;xxxxxxxx&quot; 证书申请完成后会提示证书位置： 1234[Sat Jul 29 11:51:54 AM UTC 2023] Your cert is in: /root/.acme.sh/redtux.cn/redtux.cn.cer[Sat Jul 29 11:51:54 AM UTC 2023] Your cert key is in: /root/.acme.sh/redtux.cn/redtux.cn.key[Sat Jul 29 11:51:54 AM UTC 2023] The intermediate CA cert is in: /root/.acme.sh/redtux.cn/ca.cer[Sat Jul 29 11:51:54 AM UTC 2023] And the full chain certs is there: /root/.acme.sh/redtux.cn/fullchain.cer 安装证书然后我们可以安装证书 Nginx 12345acme.sh --install-cert -d example.com \\--key-file /etc/nginx/ssl/example.com.key \\--fullchain-file /etc/nginx/ssl/example.com.crt \\--ca-file /etc/nginx/ssl/example.com.ca.crt \\--reloadcmd &quot;systemctl restart nginx&quot; 对应的 Nginx 配置指定证书文件 123ssl_certificate /etc/nginx/ssl/example.com.crt;ssl_certificate_key /etc/nginx/ssl/example.com.key;ssl_trusted_certificate /etc/nginx/ssl/example.com.ca.crt; Apache 12345acme.sh --install-cert -d example.com \\--key-file /etc/apache2/ssl/example.com.key \\--fullchain-file /etc/apache2/ssl/example.com.crt \\--ca-file /etc/apache2/ssl/example.com.ca.crt \\--reloadcmd &quot;curl https://ssl-config.mozilla.org/ffdhe2048.txt &gt;&gt; /etc/apache2/ssl/example.com.crt &amp;&amp; systemctl restart apache2&quot; 对应的 Apache 配置指定证书文件 12SSLCertificateFile /etc/apache2/ssl/example.com.crtSSLCertificateKeyFile /etc/apache2/ssl/example.com.key","link":"/2023/08/05/Nas/ubuntu-ssl-acme/"},{"title":"Qt的宏定义区分不同操作系统","text":"程序中遇到需要区分操作系统时，可使用qt的宏定义： 在中，定义了各个系统的宏定义 Q_OS_AIXDefined on AIX.Q_OS_ANDROIDDefined on Android.Q_OS_BSD4Defined on Any BSD 4.4 system.Q_OS_BSDIDefined on BSD/OS.Q_OS_CYGWINDefined on Cygwin.Q_OS_DARWINDefined on Darwin-based operating systems such as macOS, iOS, watchOS, and tvOS.Q_OS_DGUXDefined on DG/UX.Q_OS_DYNIXDefined on DYNIX/ptx.Q_OS_FREEBSDDefined on FreeBSD.Q_OS_HPUXDefined on HP-UX.Q_OS_HURDDefined on GNU Hurd.Q_OS_IOSDefined on iOS.Q_OS_IRIXDefined on SGI Irix.Q_OS_LINUXDefined on Linux.Q_OS_LYNXDefined on LynxOS.Q_OS_MACDeprecated synonym for Q_OS_DARWIN. Do not use.Q_OS_MACOSDefined on macOS.Q_OS_NETBSDDefined on NetBSD.Q_OS_OPENBSDDefined on OpenBSD.Q_OS_OSFDefined on HP Tru64 UNIX.Q_OS_OSXDeprecated synonym for Q_OS_MACOS. Do not use.Q_OS_QNXDefined on QNX Neutrino.Q_OS_RELIANTDefined on Reliant UNIX.Q_OS_SCODefined on SCO OpenServer 5.Q_OS_SOLARISDefined on Sun Solaris.Q_OS_TVOSDefined on tvOS.Q_OS_ULTRIXDefined on DEC Ultrix.Q_OS_UNIXDefined on Any UNIX BSD/SYSV system.Q_OS_UNIXWAREDefined on UnixWare 7, Open UNIX 8.Q_OS_WATCHOSDefined on watchOS.Q_OS_WIN32Defined on 32-bit and 64-bit versions of Windows.Q_OS_WIN64Defined on 64-bit versions of Windows.Q_OS_WINDefined on all supported versions of Windows. That is, if Q_OS_WIN32, Q_OS_WIN64, or Q_OS_WINRT is defined.Q_OS_WINPHONEDefined on Windows Phone 8.Q_OS_WINRTDefined for Windows Runtime (Windows Store apps) on Windows 8, Windows RT, and Windows Phone 8. 举例1：记得需要有QObject的头文件，才可以 1234567#include&lt;QObject&gt;#ifdef Q_OS_WIN#include &lt;winsock2.h&gt;#endif#include &lt;mysql.h&gt; 举例2：对于标记了Q_OBJECT这个宏的类，其成员函数可以直接上面的区分操作系统的这些宏定义。 ***.h文件： 1234567891011class DetailStepInfo : public QObject{ Q_OBJECTpublic: .................... ...................} ***.cpp文件： 12345678910111213141516bool DetailStepInfo::**************(){ #ifdef Q_OS_WIN#endif#ifdef Q_OS_LINUX QString command = QString(&quot;chmod +rw /****************************&quot;); QProcess proc; proc.execute(command);#endif ........................... }","link":"/2023/08/06/Qt/qt-os-define/"},{"title":"Qt实现弹出窗口，点击其他位置消失","text":"Qt实现弹出窗口，点击其他位置消失 一开始时想的很美好，写button的点击事件，然后在弹窗界面中写eventFilter(QEvent *e)事件 12345678if (event-&gt;type() == QEvent::ActivationChange) { if(QApplication::activeWindow() != this) { this-&gt;close(); } } return QWidget::event(event); 但是这样写发现一个问题，当我想实现点击按钮也可以关闭dialog时，不行了，因为EventFilter是第一触发事件，当我点按钮是，判断当前的活动窗口不是dialog，他先关闭，然后触发按钮的点击事件，再打开了dialog。很麻烦。 后来有了解到Qt有一个popup的属性 1info-&gt;setWindowFlags(Qt::FramelessWindowHint | Qt::Popup); 这样设置了之后，窗口是无边框且是点击其他位置关闭，但是还是会有上面的问题，没解决。 再后来，在一篇blog中看到了Qt::WA_NoMouseReplay属性机翻一下：用于弹出窗口小部件。指示在弹出小部件关闭时不应重播最近的鼠标按下事件。该标志由小部件的作者设置，并在小部件每次接收到新的鼠标事件时由Qt内核清除。大意就是它会拦截鼠标事件不会传递，专用于弹窗事件。呜呜呜，原来Qt早就搞定了这个事件，找了半天，还是Qt不熟悉。具体使用，在弹出的窗口里重写mousePressEvent(QMouseEvent *e)事件： 12345void InfoDialog::mousePressEvent(QMouseEvent *e){ setAttribute(Qt::WA_NoMouseReplay); QDialog::mousePressEvent(e);}","link":"/2023/08/06/Qt/qt-pop-dialog/"},{"title":"QLineEdit获取焦点后全选字符&#x2F;失去焦点清除选择","text":"一直觉得Chrome的地址栏的体验非常好，获取焦点后自动全选，无论是想复制地址还是重新输入新的地址都帮我们省掉了一步，如何用QLineEdit实现这个特点呢。 网上搜索了一下，发现一篇博客http://www.cnblogs.com/91program/p/5521420.html ，但是这篇博客讲述的方法有点复杂，最后还要通过延时来达到目的，有点怪异。 最后只得查看QLineEdit的类参考仿照Chrome实现，Chrome的地址栏在无焦点状态下鼠标按下不动的时候，地址栏获取了焦点，光标位于鼠标位置；鼠标无移动释放，全选地址栏字符；再次单击，清除全选；鼠标按下移动后释放，则不会全选，而是选择字符；地址栏失去焦点，清除选择。 看起来我们需要判断鼠标按下时的位置与鼠标释放时鼠标有没有移动，申请一个变量m_pressPos来存储鼠标按下时的位置。还需要知道鼠标单击的时候QLineEdit是否已获得焦点，我们用变量m_onFocus来记录。定义一个QLineEdit子类，然后重新实现mousePressEvent，mouseReleaseEvent，focusOutEvent。 代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768#ifndef URLLINEEDIT_H#define URLLINEEDIT_H#include &lt;QLineEdit&gt;class UrlLineEdit : public QLineEdit{ Q_OBJECTpublic: UrlLineEdit(QWidget *parent = 0); ~UrlLineEdit();protected: void mouseReleaseEvent(QMouseEvent *e); void mousePressEvent(QMouseEvent *e); void focusOutEvent( QFocusEvent * e );private: bool m_onFocus; QPoint m_pressPos;};#endif // URLLINEEDIT_H#include &quot;urllineedit.h&quot;#include &lt;QFocusEvent&gt;UrlLineEdit::UrlLineEdit(QWidget *parent) :QLineEdit(parent), m_onFocus(false){}UrlLineEdit::~UrlLineEdit(){}void UrlLineEdit::mouseReleaseEvent(QMouseEvent *e){ if (e-&gt;button() == Qt::LeftButton ){ if( e-&gt;pos() == m_pressPos &amp;&amp; !m_onFocus){ m_onFocus = true; selectAll(); update(); } else { int start = cursorPositionAt(m_pressPos); setSelection( start , cursorPositionAt(e-&gt;pos())-start ); } } QLineEdit::mouseReleaseEvent(e);}void UrlLineEdit::mousePressEvent(QMouseEvent *e){ if (e-&gt;button() == Qt::LeftButton){ m_pressPos = e-&gt;pos(); setCursorPosition(cursorPositionAt(m_pressPos)); } QLineEdit::mousePressEvent(e);}void UrlLineEdit::focusOutEvent(QFocusEvent *e){ m_onFocus = false; if(!hasSelectedText()){ deselect(); } QLineEdit::focusOutEvent(e);} 通过测试基本上是实现了类似Chrome的这个特性。","link":"/2022/08/11/Qt/qt-qlineedit-focus/"},{"title":"Qt生成缩略图片存入sqlite","text":"Qt生成缩略图片存入sqlite新建一个工程pro文件中加入 QT += sql 添加sql支持。 >folded12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970// main.cpp#include &lt;QApplication&gt;#include &lt;QtGui&gt;#include &lt;QSqlDatabase&gt;#include &lt;QSqlError&gt;#include &lt;QSqlQuery&gt;int main(int argc, char *argv[]){ QApplication a(argc, argv); //添加数据库,不表 QSqlDatabase db = QSqlDatabase::addDatabase(&quot;QSQLITE&quot;, &quot;conn1&quot;); db.setDatabaseName(&quot;/home/htux/thumbs.sqlite&quot;); if(!db.open()) return 1; QByteArray baImage; QString filename = &quot;/home/htux/file2.jpg&quot;; QPixmap pixmapIn(filename); QBuffer buffer(&amp;baImage); buffer.open(QIODevice::WriteOnly); QPixmap pixmapSmall; //让生成的缩略图高宽都不超过256. pixmapSmall = pixmapIn.scaled(256,256, Qt::KeepAspectRatio, Qt::SmoothTransformation); //保存生成的缩略图到ByteArray, 格式为JPG, 图片质量50. //图片质量的取值Qt文档中没查到,不过按照国际惯例应该是0-100 //保存几个不同质量的图片看看差别 pixmapSmall.save(&amp;buffer, &quot;JPG&quot;,50); pixmapSmall.save(&quot;/home/htux/file2.png&quot;, &quot;PNG&quot;); pixmapSmall.save(&quot;/home/htux/file2-5.jpg&quot;, &quot;JPG&quot;, 20); pixmapSmall.save(&quot;/home/htux/file2-5.jpg&quot;, &quot;JPG&quot;, 50); pixmapSmall.save(&quot;/home/htux/file2-8.jpg&quot;, &quot;JPG&quot;, 80); QSqlQuery query(db); query.exec(&quot;CREATE TABLE thumbs &quot; &quot;(id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,&quot; &quot; filename VCHAR(20) , thumbnail BLOB);&quot;); QString sql = QString(&quot;INSERT INTO thumbs VALUES &quot; &quot;( NULL , :filename, :thumbnail );&quot;); query.prepare(sql); query.bindValue(&quot;:filename&quot;, filename); query.bindValue(&quot;:thumbnail&quot;, baImage); query.exec(); query.exec(&quot;select * from thumbs;&quot;); //跳到最后存入的记录 if (!query.last()) return 1; QPixmap pixmapOut; //读出存入的图片 pixmapOut.loadFromData(query.value(2).toByteArray()); db.close(); //把图片用Label显示出来. QLabel label; label.setPixmap(pixmapOut); label.show(); return a.exec();}","link":"/2022/08/11/Qt/qt-sqlite-image/"}],"tags":[{"name":"web","slug":"web","link":"/tags/web/"},{"name":"VM","slug":"VM","link":"/tags/VM/"},{"name":"打印机","slug":"打印机","link":"/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/"},{"name":"ffmpeg","slug":"ffmpeg","link":"/tags/ffmpeg/"},{"name":"git","slug":"git","link":"/tags/git/"},{"name":"macOS","slug":"macOS","link":"/tags/macOS/"},{"name":"Skills","slug":"Skills","link":"/tags/Skills/"},{"name":"sublime","slug":"sublime","link":"/tags/sublime/"},{"name":"kms激活","slug":"kms激活","link":"/tags/kms%E6%BF%80%E6%B4%BB/"},{"name":"中医方剂","slug":"中医方剂","link":"/tags/%E4%B8%AD%E5%8C%BB%E6%96%B9%E5%89%82/"},{"name":"Nas工具","slug":"Nas工具","link":"/tags/Nas%E5%B7%A5%E5%85%B7/"},{"name":"Qt","slug":"Qt","link":"/tags/Qt/"}],"categories":[{"name":"备忘录","slug":"备忘录","link":"/categories/%E5%A4%87%E5%BF%98%E5%BD%95/"},{"name":"macOS","slug":"macOS","link":"/categories/macOS/"},{"name":"Ubuntu2Nas","slug":"Ubuntu2Nas","link":"/categories/Ubuntu2Nas/"},{"name":"Qt","slug":"Qt","link":"/categories/Qt/"}],"pages":[{"title":"naviPlayer使用说明","text":"简介naviPlayer是用 Qt + FFMpeg 写的 Subsonic 兼容的音乐客户端，现有优秀客户端有Sonixd， Feishin， 音流，但他们都是基于web构建，占用内存太大，我尝试了音流，启动就占用内存200M，稍点几下就奔300M了，特别是专辑列表没有分页，500张专辑拉到底部内存占用就到600M了，我的丐版macmini真的有点吃不消，所以才用Qt开了这个坑。 我是个业余玩家，边百度边写，希望能坚持下去。 Screenshot 2025-02-08主要框架搭起来了，还有不少功能还有待完善。基本能播放音乐了，因为用了ffmpeg库，支持的音乐格式还比较全。 下载(Downloads)项目 Github ，因为Github国内访问不是太顺畅，下面同时提供网盘下载。 天翼云盘 189Cloud（访问码：ni44） 安装(Install)因macOS安全机制，推荐从Mac App Store安装软件，网上自行下载软件会被隔离，请参照macOS系统自带的使用手册说明安装： 打开来自身份不明开发者的 Mac App如果你尝试打开可识别开发者未向 Apple 注册的 App，你将看到一个警告对话框。这未必意味着该 App 有问题。例如，某些 App 在开发者 ID 注册开始之前编写。不过，此 App 未经过审核，并且此 App 发布后 macOS 也没有办法检查它是否被修改或者已损坏。 恶意软件传播的常见方式是，在 App 中插入有害代码，然后重新分发被感染的 App。因此，来自身份不明开发者的未注册 App 可能会包含有害代码。 最安全的方法是，从 Mac App Store 中查找该 App 的更高版本，或者查找替代 App。 若要覆盖安全性设置且仍然打开 App，请按照以下步骤操作： 在 Mac 上的“访达” 中，找到想要打开的 App。 请勿使用启动台来执行此操作。启动台不允许访问快捷菜单。 按住 Control 键点按 App 图标，然后从快捷键菜单中选取“打开”。 点按“打开”。 该 App 将存储为安全性设置的例外情况，今后你将可以通过连按打开它，如同任何注册的 App 那样。 【注】你也可以通过点按“隐私与安全性”设置中的“仍要打开”按钮来允许被阻止的 App。此按钮在你尝试打开该 App 后一小时内可用。 若要更改可在 Mac 上打开的 App，请选取苹果菜单 &gt;“系统设置”，在边栏中点按“隐私与安全性” ，然后前往“安全性”。（你可能需要向下滚动。） 如果参照上述步骤仍无法打开，请参照该网页步骤尝试。 If the program still cannot run after following the above steps, please try following the steps on this webpage","link":"/naviplayer/index.html"}]}